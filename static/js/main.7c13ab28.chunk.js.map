{"version":3,"sources":["logo.svg","otto_logo_2.png","otto_logo_clear.png","state/StateTypes.js","state/Actions.js","conversation/msgs.js","nn-architecture/hyperparams.js","state/NNActions.js","static/datasets/iris.js","static/datasets/tweets.js","static/datasets/metadata.js","conversation/ConversationUtils.js","conversation/RespondMessage.js","conversation/RespondState.js","conversation/Conversation.js","nn-architecture/Layer.js","nn-architecture/Network.js","components/VisualizerNNContainer.js","js-ml/knn.js","state/ModelActions.js","js-ml/nlp.js","state/ModelState.js","components/PlotKNN.js","containers/PlotsContainer.js","state/NNState.js","containers/WidgetContainer.js","state/State.js","components/toolbox/ValueLabelDisplay.js","styles/NNFFToolboxStyles.js","components/toolbox/NNFFBuildPanelDetails.js","components/toolbox/NNFFToolbox.js","components/toolbox/KNNToolbox.js","components/toolbox/DataPreview.js","containers/ToolboxContainer.react.js","containers/RightColumnContainer.js","components/SampleDatasetMenu.js","components/VisualizerOptionSelectionGrid.js","containers/SummaryContainer.js","containers/VisualizerContainer.js","codegen/networkCode.js","codegen/codeGen.js","codegen/sharedCode.js","codegen/importsCode.js","codegen/preprocessCode.js","codegen/nlpCode.js","codegen/knnCode.js","codegen/regressionCode.js","containers/CodeContainer.js","containers/MainColumnContainer.js","containers/ContentContainer.js","containers/AppContainer.js","serviceWorker.js","index.js"],"names":["module","exports","Tasks","Object","freeze","CLASSIFICATION","REGRESSION","NATURAL_LANGUAGE","Models","LINEAR_REGRESSION","POISSON_REGRESSION","ORDINAL_REGRESSION","KNN","NEURAL_NETWORK_FF","SENTIMENT_ANALYSIS","ENTITY_RECOGNITION","DatasetCategory","CUSTOM","SAMPLE","SampleDataset","IRIS","BOSTON","TWITTER","Preprocessors","PCA","NORMALIZATION","TEXT_CLEANING","StepperState","TASK","DATASET","MODEL","PREPROCESSORS","VISUALIZE","StepperStateOrder","InitialState","task","task_otto","model","model_otto","nlp_models","nlp_models_otto","dataset_category","dataset_category_otto","sample_dataset","sample_dataset_otto","preprocessors","preprocessors_otto","stepper_state","stepper_finish","Actions","SET_TASK","SET_MODEL","TOGGLE_NLP_MODEL","TOGGLE_NLP_MODEL_OTTO","SET_DATASET_CATEGORY","SET_SAMPLE_DATASET","SET_TASK_OTTO","SET_MODEL_OTTO","SET_DATASET_CATEGORY_OTTO","SET_SAMPLE_DATASET_OTTO","TOGGLE_PREPROCESSOR","TOGGLE_PREPROCESSOR_OTTO","STEPPER_HANDLE_NEXT","STEPPER_HANDLE_PREVIOUS","HANDLE_STEPPER_FINISH","HANDLE_RESET","TaskRecommendation","toLowerCase","ModelPreRecommendation","str","length","ModelRecommendation","Optimizers","ADAM","Losses","BINARY_CLASS","MULTI_CLASS","Activations","RELU","SIGMOID","TANH","SOFTMAX","Initializers","GLOROT","RANDOM","HE","LECUN","NNActions","INPUT","DENSE","SET_SELECTED_LAYER","SET_LAYER_ACTIVATION","SET_LAYER_INITIALIZER","SET_NODES","REMOVE_LAYER","ADD_LAYER","RESET","SET_HIDDEN_ACTIVATIONS","SET_ALL_INITIALIZERS","SET_HIDDEN_NODES","SET_HIDDEN_LAYERS","ADD_LAYERS","REMOVE_LAYERS","irisColumns","irisUnits","irisColumnsMap","sepalLength","sepalWidth","petalLength","petalWidth","iris","type","tweets","ItemID","SentimentText","datasetMetadata","title","subtitle","icon","fontSize","instances","attributes","classes","tags","columns","columnsMap","data","units","keywords","intentToTask","task_reg","task_class","task_nlp","regressionEntityToModel","classificationEntityToModel","getWitResult","wit","utterance","a","message","extractSampleDataset","statement","console","log","sampleDataset","matchedKeyword","matchedTask","matchedModel","matchingProcess","dataset","entry","keyword","includes","extractTask","witResponse","intents","confidence","topIntentName","name","extractSubject","entities","subject","extractRegressionModel","keys","models","map","entity","extractClassificationModel","extractArchitectureChange","nn_state","count","activation","value","initializer","layer","nodes","layers","instruction","order","fromEnd","responseToMessage","userMessage","wits","state","dispatch","nn_dispatch","taskStep","modelStep","architectureStep","nn","witResult","extractedTask","effectiveSubject","taskForSampleDataset","modelForSampleDataset","nlpModel","msgs","architectureChange","dataStep","responses","push","isRecommended","datasetCategory","titleCase","isRecommendedSupervised","isRecommendedNLP","preprocessorsStep","visualizeStep","require","Wit","token","Conversation","say","sayMessages","messages","Array","isArray","flat","d","delay","Promise","r","setTimeout","handleUserMessage","document","getElementsByClassName","handleStateAdvance","responseToState","this","ottoTask","accessToken","ottoModel","ottoNN","msg","Layer","FeedforwardNN","optimizer","loss","splice","UpdateNodeProps","render","sigma","edges","graph","clear","read","refresh","React","Component","connect","prevLayerNodes","thisLayerNodes","i","prevNode","source","id","j","thisNode","edge","target","size","getMaxNodeCount","network","max","nodeCount","numNodes","VisualizerNNContainer","useNNState","coloredLayer","x","color","vgap","initY","node","y","writable","toGraph","selectedLayerIndex","style","height","transform","onClickNode","event","Number","split","onClickNodeFunc","settings","maxNodeSize","maxEdgeSize","defaultNodeColor","clone","knn","seperationSize","K","DISPATCH","typesArray","ModelActions","SET_KNN_K","SET_KNN_COLS","RUN_KNN","KNN_DONE","RUNNING","X","trainingSetX","trainingSetY","testSetX","testSetY","invoke","k","array","Math","floor","random","temp","shuffleArray","types","Set","forEach","row","add","rowArray","typeNumber","key","parseFloat","slice","indexOf","result","predict","testSetLength","predictionError","predicted","expected","misclassifications","index","error","knn_result_labels","knn_expected_labels","knn_test_data","knn_columns","knn_columns_map","knn_labels","knn_column_units","test","dressData","ottoNLP","nlp","labelForSample","sample","isTrait","entityArr","entityName","pop","replace","join","invokeNLP","doEntity","doSentiment","nlpData","nlpDatapoint","text","trim","resp","entityLabel","traits","traitLabel","sentiments","initialState","knn_k","knn_column1_index","knn_column2_index","viz_loading","ModelStateContext","createContext","DispatchModelStateContext","reducer","action","indices","ModelStateProvider","children","useReducer","Provider","useModelState","model_state","useContext","model_dispatch","fillColors","shapeTypes","PlotKNN","dataRow","result_category","hasOwnProperty","createPlotData","columnMap","xAxisColumn","yAxisColumn","CircularProgress","width","margin","top","right","bottom","left","dataKey","unit","position","offset","angle","cursor","strokeDasharray","verticalAlign","label","fill","shape","PlotsContainer","useState","NNStateContext","DispatchNNStateContext","lastHiddenLayer","lastHiddenSize","newLayer","newActivation","newInitializer","layerCount","currentLayers","inputLayer","outputLayer","nodeCountA","nodeCountB","newLayers","shift","reverse","NNStateProvider","convo","addResponseMessage","initializeWidget","deleteMessages","WidgetContainer","useEffect","toggleWidget","handleSubmit","launcher","profileAvatar","logo2","StateContext","DispatchStateContext","NumSteps","getActiveStep","currentModels","filter","val","currentModelsOtto","currentPreprocessors","preprocessor","nextState","preprocessorsModifier","handleNext","StateProvider","withStyles","theme","thumb","open","zIndex","typography","body2","pxToRem","lineHeight","transition","transitions","create","duration","shortest","transformOrigin","circle","display","alignItems","justifyContent","borderRadius","backgroundColor","palette","primary","contrastText","props","className","valueLabelDisplay","clsx","useStyles","makeStyles","root","background","paper","header","marginTop","tab","outline","actionTitles","marginBottom","floatLeft","float","fontWeight","floatRight","actionWidth","sliderWidth","layerInputItem","layerInput","textAlign","nodesLabel","marginRight","nodesItem","actionItem","button","marginTOP","LayerOption","layerIndex","Grid","item","direction","container","Typography","gutterBottom","Slider","ValueLabelComponent","ValueLabelDisplay","step","marks","min","onChange","onNodesChanged","FormControl","InputLabel","Select","onLayerActivationChange","MenuItem","onLayerInitializerChange","NNFFBuildPanelDetails","Button","disabled","variant","onClick","onLayerRemove","onLayerAdd","NNFFToolbox","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","KNNToolbox","kVal","setKVal","col1","setCol1","col2","setCol2","column","flexWrap","listStyle","padding","spacing","border","chip","table","maxWidth","noPadding","DataPreview","metadata","chips","String","chipData","Chip","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","getFormatted","TableBody","scope","dataRoot","headerText","paddingLeft","paddingTop","paddingBottom","card","cardContent","ToolboxContainer","Grow","in","Card","CardContent","getToolboxContent","RightColumnContainer","Row","marginLeft","buttonInner","StyledMenu","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","StyledMenuItem","main","common","white","SampleDatasetMenu","selectedDataset","anchorEl","handleClose","rect","getBoundingClientRect","keepMounted","Boolean","onClose","selected","handleItemClick","ListItemIcon","ListItemText","secondary","subtext","StyledBadge","badge","content","Badge","titleInner","large","avatarItem","avatarItemSelected","boxShadow","avatarLabel","avatarLabelSelected","recommend","getOptions","options","TaskToModelsMap","VisualizerOptionSelectionGrid","setAnchorEl","getIsSelected","AvatarItem","avatar","Avatar","aria-controls","alt","src","logo","optionOnClickHandler","currentTarget","handleClick","relatedTarget","aria-haspopup","justify","Tooltip","placement","overlap","badgeContent","stepLabel","actionsContainer","resetContainer","optionLabel","borderLeft","VerticalLinearStepper","steps","SelectedOptionLabel","option","Stepper","activeStep","orientation","Step","StepLabel","StepContent","getStepContent","square","rootExplanation","rootActions","fullWidth","fullHeight","visualizerHeight","VisualizerContainer","CardActions","startIcon","NavigateBeforeRounded","some","endIcon","NavigateNextRounded","StringBuilder","layerCode","sb","appendLine","inputLayerCode","hiddenAndOutputLayerCode","toString","CodeGen","sharedCode","params","sliceData","converters","converterString","dataframeInputs","dataframeString","nlpCode","append","networkCode","components","preprocessCode","componentsForModel","regressionCode","CodeContainer","MainColumnContainer","ContentContainer","Col","lg","App","Container","fluid","window","location","hostname","match","ReactDOM","StrictMode","AppContainer","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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AAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,GACZE,KAAM,eAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,EACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,EACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,mBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,EACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,EACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,EACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,EACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,EACbC,WAAY,EACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,IACZC,YAAa,IACbC,WAAY,IACZE,KAAM,kBAER,CACEL,YAAa,IACbC,WAAY,EACZC,YAAa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","file":"static/js/main.7c13ab28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/otto_logo_2.6222bba3.png\";","module.exports = __webpack_public_path__ + \"static/media/otto_logo_clear.6117400a.png\";","export const Tasks = Object.freeze({\n  CLASSIFICATION: \"Classification\",\n  REGRESSION: \"Regression\",\n  NATURAL_LANGUAGE: \"Natural Language\",\n});\n\nexport const Models = Object.freeze({\n  LINEAR_REGRESSION: \"Linear Regression\",\n  POISSON_REGRESSION: \"Poisson Regression\",\n  ORDINAL_REGRESSION: \"Ordinal Regression\",\n  KNN: \"K-Nearest Neighbors\",\n  NEURAL_NETWORK_FF: \"Feedforward Neural Network\",\n  SENTIMENT_ANALYSIS: \"Sentiment Analysis\",\n  ENTITY_RECOGNITION: \"Entity Recognition\",\n});\n\nexport const TaskToModelsMap = (task: TasksType) => {\n  let validModels;\n  switch (task) {\n    case Tasks.CLASSIFICATION:\n      validModels = (({ KNN, NEURAL_NETWORK_FF }) => ({\n        KNN,\n        NEURAL_NETWORK_FF,\n      }))(Models);\n      return validModels;\n    case Tasks.REGRESSION:\n      validModels = (({\n        LINEAR_REGRESSION,\n        POISSON_REGRESSION,\n        ORDINAL_REGRESSION,\n      }) => ({\n        LINEAR_REGRESSION,\n        POISSON_REGRESSION,\n        ORDINAL_REGRESSION,\n      }))(Models);\n      return validModels;\n    case Tasks.NATURAL_LANGUAGE:\n      validModels = (({ SENTIMENT_ANALYSIS, ENTITY_RECOGNITION }) => ({\n        SENTIMENT_ANALYSIS,\n        ENTITY_RECOGNITION,\n      }))(Models);\n      return validModels;\n    default:\n      return [];\n  }\n};\n\nexport const DatasetCategory = Object.freeze({\n  CUSTOM: \"Custom\",\n  SAMPLE: \"Sample\",\n});\n\nexport const SampleDataset = Object.freeze({\n  IRIS: \"iris\",\n  BOSTON: \"boston\",\n  TWITTER: \"twitter\",\n});\n\nexport const Preprocessors = Object.freeze({\n  PCA: \"PCA\",\n  NORMALIZATION: \"Normalization\",\n  TEXT_CLEANING: \"Text Cleaning\",\n});\n\nexport const StepperState = Object.freeze({\n  TASK: \"task\",\n  DATASET: \"dataset\",\n  MODEL: \"model\",\n  PREPROCESSORS: \"preprocessors\",\n  VISUALIZE: \"visualize\",\n});\n\nexport const StepperStateOrder = [\n  StepperState.TASK,\n  StepperState.DATASET,\n  StepperState.MODEL,\n  StepperState.PREPROCESSORS,\n  StepperState.VISUALIZE,\n];\n\nexport type TasksType = \"Classification\" | \"Regression\" | \"Natural Language\";\n\nexport type ModelsType =\n  | \"Linear Regression\"\n  | \"Poisson Regression\"\n  | \"Ordinal Regression\"\n  | \"K-Nearest Neighbors\"\n  | \"Feedforward Neural Network\"\n  | \"Sentiment Analysis\"\n  | \"Entity Recognition\";\n\nexport type DatasetCategoryType = \"Custom\" | \"Sample\";\n\nexport type SampleDatasetType = \"iris | boston\";\n\nexport type PreprocessorsType = \"PCA\" | \"Normalization\" | \"Text Cleaning\";\n\nexport type StepperStateType =\n  | \"task\"\n  | \"dataset\"\n  | \"model\"\n  | \"preprocessors\"\n  | \"visualize\";\n\nexport type StateType = {\n  task: ?TasksType,\n  task_otto: ?TasksType,\n  model: ?ModelsType,\n  model_otto: ?ModelsType,\n  nlp_models: Array<?ModelsType>,\n  nlp_models_otto: Array<?ModelsType>,\n  dataset_category: ?DatasetCategoryType,\n  dataset_category_otto: ?DatasetCategoryType,\n  sample_dataset: ?SampleDatasetType,\n  sample_dataset_otto: ?SampleDatasetType,\n  preprocessors: Array<PreprocessorsType>,\n  preprocessors_otto: Array<PreprocessorsType>,\n\n  stepper_state: StepperStateType,\n  stepper_finish: Boolean,\n};\n\n// export const InitialState: () => StateType = () => ({\n//   task: Tasks.CLASSIFICATION,\n//   task_otto: null,\n//   model: Models.KNN,\n//   model_otto: null,\n//   nlp_models: [],\n//   nlp_models_otto: [],\n//   dataset_category: DatasetCategory.CUSTOM,\n//   dataset_category_otto: null,\n//   sample_dataset: null,\n//   sample_dataset_otto: null,\n//   preprocessors: [],\n//   preprocessors_otto: [],\n\n//   stepper_state: StepperState.PREPROCESSORS,\n//   stepper_finish: false,\n// });\n\n// export const InitialState: () => StateType = () => ({\n//   task: Tasks.NATURAL_LANGUAGE,\n//   task_otto: null,\n//   model: null,\n//   model_otto: null,\n//   nlp_models: [],\n//   nlp_models_otto: [],\n//   dataset_category: DatasetCategory.CUSTOM,\n//   dataset_category_otto: null,\n//   sample_dataset: null,\n//   sample_dataset_otto: null,\n//   preprocessors: [],\n//   preprocessors_otto: [],\n\n//   stepper_state: StepperState.MODEL,\n//   stepper_finish: false,\n// });\n\nexport const InitialState: () => StateType = () => ({\n  task: null,\n  task_otto: null,\n  model: null,\n  model_otto: null,\n  nlp_models: [],\n  nlp_models_otto: [],\n  dataset_category: null,\n  dataset_category_otto: null,\n  sample_dataset: null,\n  sample_dataset_otto: null,\n  preprocessors: [],\n  preprocessors_otto: [],\n\n  stepper_state: StepperStateOrder[0],\n  stepper_finish: false,\n});\n","import {\n  TasksType,\n  ModelsType,\n  DatasetCategoryType,\n  SampleDatasetType,\n  PreprocessorsType,\n} from \"state/StateTypes\";\n\nexport const Actions = Object.freeze({\n  SET_TASK: \"SET_TASK\",\n  SET_MODEL: \"SET_MODEL\",\n  TOGGLE_NLP_MODEL: \"TOGGLE_NLP_MODEL\",\n  TOGGLE_NLP_MODEL_OTTO: \"TOGGLE_NLP_MODEL_OTTO\",\n  SET_DATASET_CATEGORY: \"SET_DATASET_CATEGORY\",\n  SET_SAMPLE_DATASET: \"SET_SAMPLE_DATASET\",\n  SET_TASK_OTTO: \"SET_TASK_OTTO\",\n  SET_MODEL_OTTO: \"SET_MODEL_OTTO\",\n  SET_DATASET_CATEGORY_OTTO: \"SET_DATASET_CATEGORY_OTTO\",\n  SET_SAMPLE_DATASET_OTTO: \"SET_SAMPLE_DATASET_OTTO\",\n  // CLEAR_PREPROCESSORS_INCLUDING_OTTO: \"CLEAR_PREPROCESSORS_INCLUDING_OTTO\",\n  TOGGLE_PREPROCESSOR: \"TOGGLE_PREPROCESSOR\",\n  TOGGLE_PREPROCESSOR_OTTO: \"TOGGLE_PREPROCESSOR_OTTO\",\n  STEPPER_HANDLE_NEXT: \"STEPPER_HANDLE_NEXT\",\n  STEPPER_HANDLE_PREVIOUS: \"STEPPER_HANDLE_PREVIOUS\",\n  HANDLE_STEPPER_FINISH: \"HANDLE_STEPPER_FINISH\",\n  HANDLE_RESET: \"HANDLE_RESET\",\n});\n\nexport type ActionType =\n  | { type: \"SET_TASK\", task: TasksType }\n  | { type: \"SET_MODEL\", model: ModelsType }\n  | { type: \"TOGGLE_NLP_MODEL\", model: ModelsType }\n  | { type: \"TOGGLE_NLP_MODEL_OTTO\", model: ModelsType }\n  | { type: \"SET_DATASET_CATEGORY\", dataset_category: DatasetCategoryType }\n  | { type: \"SET_SAMPLE_DATASET\", sample_dataset: SampleDatasetType }\n  | { type: \"SET_TASK_OTTO\", task: TasksType }\n  | { type: \"SET_MODEL_OTTO\", model: ModelsType }\n  | {\n      type: \"SET_DATASET_CATEGORY_OTTO\",\n      dataset_category: DatasetCategoryType,\n    }\n  | { type: \"SET_SAMPLE_DATASET_OTTO\", sample_dataset: SampleDatasetType }\n  // | { type: \"CLEAR_PREPROCESSORS_INCLUDING_OTTO\" }\n  | { type: \"TOGGLE_PREPROCESSOR\", preprocessor: PreprocessorsType }\n  | { type: \"TOGGLE_PREPROCESSOR_OTTO\", preprocessor: PreprocessorsType }\n  | { type: \"STEPPER_HANDLE_NEXT\" }\n  | { type: \"STEPPER_HANDLE_PREVIOUS\" }\n  | { type: \"HANDLE_STEPPER_FINISH\" }\n  | { type: \"HANDLE_RESET\" };\n","import { DatasetCategory, Tasks } from \"state/StateTypes\";\nimport { titleCase } from \"title-case\";\n\nexport const IntroQuestion = () => {\n    return [\n        \"Hey there!\",\n        \"My name's Otto, and I'm here to help you with machine learning\",\n        \"What are you looking to do today?\"\n    ];\n}\n\n// export const SampleData = (topic) => {\n//     return `We have some sample data for ${topic} if you'd like to use that`;\n// }\n\nexport const TaskRecommendation = (task) => {\n    return [\n        `Neat idea!`,\n        `I recommend a ${task.toLowerCase()} model to help you explore it`\n    ];\n}\n\n// export const TaskAndSample = (task) => {\n//     return [\n//         `I think a ${task} model would help you explore that idea`,\n//         \"Check out a few sample datasets if you'd like, or leave it blank to use your own\"\n//     ]\n// }\n\nexport const TaskInfo = () => {\n    return [\n        \"Hmm..so there's more than one way to model that. But I can definitely help you narrow it down!\",\n        \"Regression is used to model numerical variables, like stock prices or infection rates\",\n        \"while classification predicts categorical outcomes, (if an image is a cat or a dog, whether a candidate will win or not, and so on)\", \n        \"Natural language processing can do things like identify structures in text and figure out the tone behind an expression\",\n        \"Whenever you’re ready, pick the task that seems like the best fit!\"\n    ];\n}\n\nexport const AdvanceFromTask = (task) => {\n    return `Alright, ${task.toLowerCase()} it is!`\n}\n\nexport const DatasetPreface = () => {\n    return [\n        \"Just letting you know, I have a few sample datasets you can model and visualize right from your browser\",\n        \"Check them out if you'd like, or select “Custom” to use your own data\",\n    ];\n}\n\nexport const DatasetPreRecommendation = () => {\n    return [\n        \"I've preselected a dataset that seems to match what you're looking for\",\n        \"Feel free to check out other sample datasets, or select “Custom” to use your own\"\n    ];\n}\n\nexport const AdvanceFromDataset = (datasetCategory, sampleDataset) => {\n    const isCustom = (datasetCategory === DatasetCategory.CUSTOM);\n    let str = isCustom ? `Going with custom data, then!` : `Going with the ${titleCase(sampleDataset)} dataset, then!`;\n    return `${str}`\n}\n\nexport const ModelPreface = (task) => {\n    let str = task === Tasks.NATURAL_LANGUAGE ? \"the appropriate models\" : \"an appropriate model\";\n    return [\n        `Now that we have our ML task and dataset sorted out, the next step is to select ${str}`,\n    ];\n}\n\nexport const ModelPreRecommendation = (model, nlp_models) => {\n    if (nlp_models) {\n        let str = (nlp_models.length === 2) ? \"combining both analyses\" : `${nlp_models[0].toLowerCase()}`\n        return `I think ${str} is the way to go`\n    }\n    return `I think a ${model.toLowerCase()} algorithm is the way to go`\n}\n\nexport const NLPModelInfo = () => {\n    return [\n        \"Entity recognition is useful for extracting key information from text (celebrity names, album titles, and times)\",\n        \"while sentiment analysis can pick up on implied information, like expressions of thanks or how positive/negative a statement is\",\n        \"You can combine both for a comprehensive analysis too!\"\n    ]\n}\n\nexport const RegressionModelQuestion = () => {\n    return [\n        \"What can you tell me about the dependent variable you're trying to model?\"\n    ]\n}\n\nexport const ClassificationModelQuestion = () => {\n    return [\n        \"What can you tell me about the dataset you're trying to model?\"\n    ]\n}\n\nexport const ModelRecommendation = (model) => {\n    return [\n        `In that case, I think a ${model.toLowerCase()} model would be perfect`\n    ]\n}\n\nexport const AdvanceFromModel = (task) => {\n    return [\n        `Okay, we've got our ${task.toLowerCase()} model figured out`,\n    ]\n}\n\nexport const PreprocessorRecommendation = () => {\n    return [\n        \"Based on everything you've told me so far, I've gone ahead and setup some data preprocessors to help optimize the learning process\",\n        \"(As always, you can tweak them if you know what you're doing!)\"\n    ]\n}\n\nexport const NeuralNetworkPreface = () => {\n    return [\n        \"Finally, we're ready to build and configure our neural network!\",\n        \"I've made a basic feedforward NN with 5 hidden layers and standard activations / initializers\",\n        \"You can play with the model and customize it, or tell me what changes to make\"\n    ]\n}\n\n","export const Optimizers = Object.freeze({\n  ADAM: \"adam\",\n});\n\nexport const Losses = Object.freeze({\n  BINARY_CLASS: \"binary_crossentropy\",\n  MULTI_CLASS: \"categorical_crossentropy\",\n});\n\nexport const Activations = Object.freeze({\n  RELU: \"relu\",\n  SIGMOID: \"sigmoid\",\n  TANH: \"tanh\",\n  SOFTMAX: \"softmax\",\n});\n\nexport const Initializers = Object.freeze({\n  GLOROT: \"glorot_uniform\",\n  RANDOM: \"random_uniform\",\n  HE: \"he_uniform\",\n  LECUN: \"lecun_uniform\",\n});\n\nexport const Layers = Object.freeze({\n  INPUT: \"Input\",\n  DENSE: \"Dense\",\n});\n","import {\n  Optimizers,\n  Losses,\n  Activations,\n  Initializers,\n} from \"nn-architecture/hyperparams\";\n\nexport const NNActions = Object.freeze({\n  SET_SELECTED_LAYER: \"SET_SELECTED_LAYER\",\n  SET_LAYER_ACTIVATION: \"SET_LAYER_ACTIVATION\",\n  SET_LAYER_INITIALIZER: \"SET_LAYER_INITIALIZER\",\n  SET_NODES: \"SET_NODES\",\n  REMOVE_LAYER: \"REMOVE_LAYER\",\n  ADD_LAYER: \"ADD_LAYER\",\n  RESET: \"RESET\",\n  SET_HIDDEN_ACTIVATIONS: \"SET_HIDDEN_ACTIVATIONS\",\n  SET_ALL_INITIALIZERS: \"SET_INITIALIZERS\",\n  SET_HIDDEN_NODES: \"SET_HIDDEN_NODES\",\n  SET_HIDDEN_LAYERS: \"SET_HIDDEN_LAYERS\",\n  ADD_LAYERS: \"ADD_LAYERS\",\n  REMOVE_LAYERS: \"REMOVE_LAYERS\",\n});\n\nexport type NNActionType =\n  | {\n      type: NNActions.SET_SELECTED_LAYER,\n      layer: Number,\n    }\n  | {\n      type: NNActions.SET_LAYER_ACTIVATION,\n      layer: Number,\n      activation: String,\n    }\n  | {\n      type: NNActions.SET_LAYER_INITIALIZER,\n      layer: Number,\n      initializer: String,\n    }\n  | {\n      type: NNActions.SET_NODES,\n      layer: Number,\n      nodes: Number,\n    }\n  | {\n      type: NNActions.REMOVE_LAYER,\n      layer: Number,\n    }\n  | {\n      type: NNActions.ADD_LAYER,\n    }\n  | {\n      type: NNActions.RESET,\n    }\n  | {\n      type: NNActions.SET_HIDDEN_ACTIVATIONS,\n      activation: String,\n    }\n  | {\n      type: NNActions.SET_INITIALIZERS,\n      initializer: String,\n    }\n  | {\n      type: NNActions.SET_HIDDEN_NODES,\n      nodes: Number,\n    }\n  | {\n      type: NNActions.SET_HIDDEN_LAYERS,\n      layers: Number,\n    }\n  | {\n      type: NNActions.ADD_LAYERS,\n      layers: Number,\n    }\n  | {\n      type: NNActions.REMOVE_LAYERS,\n      layers: Number,\n      fromEnd: Boolean,\n    };\n","export const irisColumns = [\n  \"sepalLength\",\n  \"sepalWidth\",\n  \"petalLength\",\n  \"petalWidth\",\n];\n\nexport const irisUnits = [\"cm\", \"cm\", \"cm\", \"cm\"];\n\nexport const irisColumnsMap = {\n  sepalLength: \"Sepal Length\",\n  sepalWidth: \"Sepal Width\",\n  petalLength: \"Petal Length\",\n  petalWidth: \"Petal Width\",\n};\n\nexport const iris = [\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.5,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 3,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.7,\n    sepalWidth: 3.2,\n    petalLength: 1.3,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.6,\n    sepalWidth: 3.1,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.6,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3.9,\n    petalLength: 1.7,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.6,\n    sepalWidth: 3.4,\n    petalLength: 1.4,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.4,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.4,\n    sepalWidth: 2.9,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 3.1,\n    petalLength: 1.5,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3.7,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.8,\n    sepalWidth: 3.4,\n    petalLength: 1.6,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.8,\n    sepalWidth: 3,\n    petalLength: 1.4,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.3,\n    sepalWidth: 3,\n    petalLength: 1.1,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 4,\n    petalLength: 1.2,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 4.4,\n    petalLength: 1.5,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3.9,\n    petalLength: 1.3,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.5,\n    petalLength: 1.4,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 3.8,\n    petalLength: 1.7,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.8,\n    petalLength: 1.5,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3.4,\n    petalLength: 1.7,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.7,\n    petalLength: 1.5,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.6,\n    sepalWidth: 3.6,\n    petalLength: 1,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.3,\n    petalLength: 1.7,\n    petalWidth: 0.5,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.8,\n    sepalWidth: 3.4,\n    petalLength: 1.9,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3,\n    petalLength: 1.6,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.4,\n    petalLength: 1.6,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.2,\n    sepalWidth: 3.5,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.2,\n    sepalWidth: 3.4,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.7,\n    sepalWidth: 3.2,\n    petalLength: 1.6,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.8,\n    sepalWidth: 3.1,\n    petalLength: 1.6,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3.4,\n    petalLength: 1.5,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.2,\n    sepalWidth: 4.1,\n    petalLength: 1.5,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 4.2,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 3.1,\n    petalLength: 1.5,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.2,\n    petalLength: 1.2,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 3.5,\n    petalLength: 1.3,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 3.1,\n    petalLength: 1.5,\n    petalWidth: 0.1,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.4,\n    sepalWidth: 3,\n    petalLength: 1.3,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.4,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.5,\n    petalLength: 1.3,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.5,\n    sepalWidth: 2.3,\n    petalLength: 1.3,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.4,\n    sepalWidth: 3.2,\n    petalLength: 1.3,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.5,\n    petalLength: 1.6,\n    petalWidth: 0.6,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.8,\n    petalLength: 1.9,\n    petalWidth: 0.4,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.8,\n    sepalWidth: 3,\n    petalLength: 1.4,\n    petalWidth: 0.3,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 3.8,\n    petalLength: 1.6,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 4.6,\n    sepalWidth: 3.2,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5.3,\n    sepalWidth: 3.7,\n    petalLength: 1.5,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 3.3,\n    petalLength: 1.4,\n    petalWidth: 0.2,\n    type: \"Iris-setosa\",\n  },\n  {\n    sepalLength: 7,\n    sepalWidth: 3.2,\n    petalLength: 4.7,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 3.2,\n    petalLength: 4.5,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.9,\n    sepalWidth: 3.1,\n    petalLength: 4.9,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 2.3,\n    petalLength: 4,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.5,\n    sepalWidth: 2.8,\n    petalLength: 4.6,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 2.8,\n    petalLength: 4.5,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 3.3,\n    petalLength: 4.7,\n    petalWidth: 1.6,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 2.4,\n    petalLength: 3.3,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.6,\n    sepalWidth: 2.9,\n    petalLength: 4.6,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.2,\n    sepalWidth: 2.7,\n    petalLength: 3.9,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 2,\n    petalLength: 3.5,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.9,\n    sepalWidth: 3,\n    petalLength: 4.2,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 2.2,\n    petalLength: 4,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 2.9,\n    petalLength: 4.7,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 2.9,\n    petalLength: 3.6,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3.1,\n    petalLength: 4.4,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 3,\n    petalLength: 4.5,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.7,\n    petalLength: 4.1,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.2,\n    sepalWidth: 2.2,\n    petalLength: 4.5,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 2.5,\n    petalLength: 3.9,\n    petalWidth: 1.1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.9,\n    sepalWidth: 3.2,\n    petalLength: 4.8,\n    petalWidth: 1.8,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 2.8,\n    petalLength: 4,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.5,\n    petalLength: 4.9,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 2.8,\n    petalLength: 4.7,\n    petalWidth: 1.2,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 2.9,\n    petalLength: 4.3,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.6,\n    sepalWidth: 3,\n    petalLength: 4.4,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.8,\n    sepalWidth: 2.8,\n    petalLength: 4.8,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3,\n    petalLength: 5,\n    petalWidth: 1.7,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 2.9,\n    petalLength: 4.5,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 2.6,\n    petalLength: 3.5,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 2.4,\n    petalLength: 3.8,\n    petalWidth: 1.1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 2.4,\n    petalLength: 3.7,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.7,\n    petalLength: 3.9,\n    petalWidth: 1.2,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 2.7,\n    petalLength: 5.1,\n    petalWidth: 1.6,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.4,\n    sepalWidth: 3,\n    petalLength: 4.5,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 3.4,\n    petalLength: 4.5,\n    petalWidth: 1.6,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3.1,\n    petalLength: 4.7,\n    petalWidth: 1.5,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.3,\n    petalLength: 4.4,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 3,\n    petalLength: 4.1,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 2.5,\n    petalLength: 4,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.5,\n    sepalWidth: 2.6,\n    petalLength: 4.4,\n    petalWidth: 1.2,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 3,\n    petalLength: 4.6,\n    petalWidth: 1.4,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.6,\n    petalLength: 4,\n    petalWidth: 1.2,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5,\n    sepalWidth: 2.3,\n    petalLength: 3.3,\n    petalWidth: 1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 2.7,\n    petalLength: 4.2,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 3,\n    petalLength: 4.2,\n    petalWidth: 1.2,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 2.9,\n    petalLength: 4.2,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.2,\n    sepalWidth: 2.9,\n    petalLength: 4.3,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.1,\n    sepalWidth: 2.5,\n    petalLength: 3,\n    petalWidth: 1.1,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 2.8,\n    petalLength: 4.1,\n    petalWidth: 1.3,\n    type: \"Iris-versicolor\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 3.3,\n    petalLength: 6,\n    petalWidth: 2.5,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.7,\n    petalLength: 5.1,\n    petalWidth: 1.9,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.1,\n    sepalWidth: 3,\n    petalLength: 5.9,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.9,\n    petalLength: 5.6,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.5,\n    sepalWidth: 3,\n    petalLength: 5.8,\n    petalWidth: 2.2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.6,\n    sepalWidth: 3,\n    petalLength: 6.6,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 4.9,\n    sepalWidth: 2.5,\n    petalLength: 4.5,\n    petalWidth: 1.7,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.3,\n    sepalWidth: 2.9,\n    petalLength: 6.3,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 2.5,\n    petalLength: 5.8,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.2,\n    sepalWidth: 3.6,\n    petalLength: 6.1,\n    petalWidth: 2.5,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.5,\n    sepalWidth: 3.2,\n    petalLength: 5.1,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 2.7,\n    petalLength: 5.3,\n    petalWidth: 1.9,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.8,\n    sepalWidth: 3,\n    petalLength: 5.5,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.7,\n    sepalWidth: 2.5,\n    petalLength: 5,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.8,\n    petalLength: 5.1,\n    petalWidth: 2.4,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 3.2,\n    petalLength: 5.3,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.5,\n    sepalWidth: 3,\n    petalLength: 5.5,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.7,\n    sepalWidth: 3.8,\n    petalLength: 6.7,\n    petalWidth: 2.2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.7,\n    sepalWidth: 2.6,\n    petalLength: 6.9,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 2.2,\n    petalLength: 5,\n    petalWidth: 1.5,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.9,\n    sepalWidth: 3.2,\n    petalLength: 5.7,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.6,\n    sepalWidth: 2.8,\n    petalLength: 4.9,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.7,\n    sepalWidth: 2.8,\n    petalLength: 6.7,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.7,\n    petalLength: 4.9,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3.3,\n    petalLength: 5.7,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.2,\n    sepalWidth: 3.2,\n    petalLength: 6,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.2,\n    sepalWidth: 2.8,\n    petalLength: 4.8,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 3,\n    petalLength: 4.9,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 2.8,\n    petalLength: 5.6,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.2,\n    sepalWidth: 3,\n    petalLength: 5.8,\n    petalWidth: 1.6,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.4,\n    sepalWidth: 2.8,\n    petalLength: 6.1,\n    petalWidth: 1.9,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.9,\n    sepalWidth: 3.8,\n    petalLength: 6.4,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 2.8,\n    petalLength: 5.6,\n    petalWidth: 2.2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.8,\n    petalLength: 5.1,\n    petalWidth: 1.5,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.1,\n    sepalWidth: 2.6,\n    petalLength: 5.6,\n    petalWidth: 1.4,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 7.7,\n    sepalWidth: 3,\n    petalLength: 6.1,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 3.4,\n    petalLength: 5.6,\n    petalWidth: 2.4,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.4,\n    sepalWidth: 3.1,\n    petalLength: 5.5,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6,\n    sepalWidth: 3,\n    petalLength: 4.8,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.9,\n    sepalWidth: 3.1,\n    petalLength: 5.4,\n    petalWidth: 2.1,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3.1,\n    petalLength: 5.6,\n    petalWidth: 2.4,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.9,\n    sepalWidth: 3.1,\n    petalLength: 5.1,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.8,\n    sepalWidth: 2.7,\n    petalLength: 5.1,\n    petalWidth: 1.9,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.8,\n    sepalWidth: 3.2,\n    petalLength: 5.9,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3.3,\n    petalLength: 5.7,\n    petalWidth: 2.5,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.7,\n    sepalWidth: 3,\n    petalLength: 5.2,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.3,\n    sepalWidth: 2.5,\n    petalLength: 5,\n    petalWidth: 1.9,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.5,\n    sepalWidth: 3,\n    petalLength: 5.2,\n    petalWidth: 2,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 6.2,\n    sepalWidth: 3.4,\n    petalLength: 5.4,\n    petalWidth: 2.3,\n    type: \"Iris-virginica\",\n  },\n  {\n    sepalLength: 5.9,\n    sepalWidth: 3,\n    petalLength: 5.1,\n    petalWidth: 1.8,\n    type: \"Iris-virginica\",\n  },\n];\n","export const twitterColumns = [\"SentimentText\"];\n\nexport const twitterColumnsMap = {\n  SentimentText: \"Tweet\",\n};\n\nexport const tweets = [\n  {\n    ItemID: 11754,\n    SentimentText: \"** need a neW rec. system  **\",\n  },\n  {\n    ItemID: 91423,\n    SentimentText: \"@bamber66    I know.  They're both awesome bands.\",\n  },\n  {\n    ItemID: 35506,\n    SentimentText:\n      \"@AldhyZ I don't work in Sony, I got no special connections. I work very very hard and I got lucky. But its really more hard work than luck.\",\n  },\n  {\n    ItemID: 58108,\n    SentimentText:\n      \"@Beez_ Erroneous apostrophes aside, I can see your point. If it was any other team...well, you know...\",\n  },\n  {\n    ItemID: 96341,\n    SentimentText: \"@CRISTYLE_ happy bday to your mom\",\n  },\n  {\n    ItemID: 50917,\n    SentimentText: \"@AStreett Thank you! I'm trying\",\n  },\n  {\n    ItemID: 93012,\n    SentimentText: \"@conceptsguy Wow! That is absolutely incredible.\",\n  },\n  {\n    ItemID: 40961,\n    SentimentText:\n      \"@amycran Thanks! And don't worry I'm sure you'll be back in the game in no time.\",\n  },\n  {\n    ItemID: 32129,\n    SentimentText:\n      \"@alf_fified yesss lahha hahah its okay it fills my tummy just fine\",\n  },\n  {\n    ItemID: 6508,\n    SentimentText: \"Sure fail today's paper.\",\n  },\n  {\n    ItemID: 75060,\n    SentimentText: \"@BSBSavedMyLife Oh nevermind I read Isla's tweet about it.\",\n  },\n  {\n    ItemID: 15363,\n    SentimentText:\n      \"..i think imma start writing again.. i got some surpressed feelings that kud make some dope songs im sureee\",\n  },\n  {\n    ItemID: 44105,\n    SentimentText: \"@aniterzayan haha thaaaanks\",\n  },\n  {\n    ItemID: 40994,\n    SentimentText:\n      \"@amyhaggerston yeah apart from me getting like food poisoning, good day.\",\n  },\n  {\n    ItemID: 41333,\n    SentimentText: \"@amyswarren  which one did they choose?\",\n  },\n  {\n    ItemID: 9006,\n    SentimentText:\n      \" yer as beautiful as the joshua trees in palmdale  as innocent as the babys getting kidnapped from their homes out there ...\",\n  },\n  {\n    ItemID: 23526,\n    SentimentText: \"@14tonystewart mom says u sure do have a cute smile\",\n  },\n  {\n    ItemID: 50084,\n    SentimentText:\n      \"@AmandaWadsley i thought it'd go all gooey and like melted chocolate and yum, but it just burned and bubbled and i was like damn  x\",\n  },\n  {\n    ItemID: 12197,\n    SentimentText: \"*coughing out my lungs*\",\n  },\n  {\n    ItemID: 6779,\n    SentimentText: \"#mw2 OMG i watch nfl  dunt like nba much\",\n  },\n  {\n    ItemID: 62666,\n    SentimentText: \"@blcsfo I dunno *you* tell me\",\n  },\n  {\n    ItemID: 40977,\n    SentimentText:\n      \"@amyfergface Amy, I miss you. I wish you still lived in Stoke.\",\n  },\n  {\n    ItemID: 12091,\n    SentimentText:\n      \"andand_ disz shawtyy heart braken. hesz officially gone yall. he on lokkdown 4 a yeer n tew munths wit no visitasz or kallsz\",\n  },\n  {\n    ItemID: 41250,\n    SentimentText: \"@amyrachel1911  try to have fun x\",\n  },\n  {\n    ItemID: 28206,\n    SentimentText: \"@aileuromania Well, I do need a vacation...\",\n  },\n  {\n    ItemID: 98122,\n    SentimentText:\n      \"@concertreviewer well thats all that matters that no one was hurt and no damage!\",\n  },\n  {\n    ItemID: 66487,\n    SentimentText:\n      \"@brinathemodel so he has you # and I don't? I feel so rejected\",\n  },\n  {\n    ItemID: 29634,\n    SentimentText: \"@Adam_WR AND I'M JEALOUS SAY HI TO EVERYONE\",\n  },\n  {\n    ItemID: 47782,\n    SentimentText: \"@AriesGirl40 Your cousin was a yankee? Eww... he's gross\",\n  },\n  {\n    ItemID: 30235,\n    SentimentText:\n      \"@AddictedToJones Urg, I haven't seen them at all. One day I will! Not only will, but must\",\n  },\n  {\n    ItemID: 80010,\n    SentimentText:\n      \"@Cantrewind @floatnsink awwww  someone cant handle their tequila?\",\n  },\n  {\n    ItemID: 33586,\n    SentimentText: \"@AIRasheville Good point. Thanks for being there for me.\",\n  },\n  {\n    ItemID: 69544,\n    SentimentText:\n      \"@andibeth82 ok sweet! and whenever u want, I am stuck in bed all weekend\",\n  },\n  {\n    ItemID: 453,\n    SentimentText:\n      \"my aunties dog is getting put down  hes my dogs brother aswell\",\n  },\n  {\n    ItemID: 4412,\n    SentimentText: \"on my way to work. SUCKS being dependent on the man!\",\n  },\n  {\n    ItemID: 13247,\n    SentimentText:\n      \".. I MISS MY BOYFRIEND!!!! .. OMG!!! .. *Having an emotional meltdown excuse me ..* ..  ..\",\n  },\n  {\n    ItemID: 73590,\n    SentimentText:\n      \"@candycenoel baseball today??? thats exciting!! for you anyways not me\",\n  },\n  {\n    ItemID: 38720,\n    SentimentText:\n      \"@Ampiphy You sound awesome keep up the great work. Just Love Set me on Fire.\",\n  },\n  {\n    ItemID: 39180,\n    SentimentText: \"@amyshell on me break now... what u upto ...\",\n  },\n  {\n    ItemID: 4613,\n    SentimentText: \"#bgt vote dream bears\",\n  },\n  {\n    ItemID: 38988,\n    SentimentText: \"@AluraStar Have a good night Alura!\",\n  },\n  {\n    ItemID: 64399,\n    SentimentText: \"@bowwow614 gee i guess u cant see me either\",\n  },\n  {\n    ItemID: 62028,\n    SentimentText:\n      \"@Birdsingr  http://bit.ly/anQjU ACE prize winning FAN MADE vid for best single NOT  released in 2008. Please keep retweeting.\",\n  },\n  {\n    ItemID: 94544,\n    SentimentText:\n      \"@bebiv oh cool  keep me updated - I'm so annoyed I can't watch it!!\",\n  },\n  {\n    ItemID: 8643,\n    SentimentText: \"what the fuck\",\n  },\n  {\n    ItemID: 44068,\n    SentimentText:\n      \"@AnneeApple @mclorna Oh, don't say nice things about scooters as I am about to sell mine.  I feel sad\",\n  },\n  {\n    ItemID: 91613,\n    SentimentText:\n      \"@COLD_CASH I hope so, he might have to have surgery to remove whatever the hell he ate\",\n  },\n  {\n    ItemID: 42317,\n    SentimentText:\n      \"@AndyyK pretty crap! looks like i'm going to have to move out of balcatta\",\n  },\n  {\n    ItemID: 7195,\n    SentimentText:\n      \"--#Imiss wen justyn used to ride his huffy to 178thandsayres to get me a bacon,eggandcheese, a pink lemonade and a pack of blue skittles.\",\n  },\n  {\n    ItemID: 87071,\n    SentimentText:\n      \"@autumnconfusion boo.  that's weird, its only on imdb. anyway, it's from a film called The Hangover\",\n  },\n  {\n    ItemID: 40822,\n    SentimentText:\n      \"@amourlinda, and my girls, i'm coming home soon and I dnt think my sister's gna be home tonightsy  if you is still down.\",\n  },\n  {\n    ItemID: 33862,\n    SentimentText:\n      \"@allergicgirl you'll feel rowing in your back if you do it right\",\n  },\n  {\n    ItemID: 16875,\n    SentimentText:\n      \"... who was probably just out looking for a bunny brunch until he saw us.  Scarpered off pretty quickly\",\n  },\n  {\n    ItemID: 7009,\n    SentimentText:\n      \"#pseudowrimo sounds fun  I could go with finishing this story I'm working on\",\n  },\n  {\n    ItemID: 55394,\n    SentimentText:\n      \"@bartonbishop I'm doing my best.  There's no way for me to get a hold of my boss, and I don't think she's checking email.\",\n  },\n  {\n    ItemID: 10370,\n    SentimentText:\n      \"People living in competition.               Hello world. I'm awake now\",\n  },\n  {\n    ItemID: 88481,\n    SentimentText:\n      \"@ayyowoodcock yeah now I have to watch a bunch of dumbass seniors cry n shit. YAY!!\",\n  },\n  {\n    ItemID: 35652,\n    SentimentText:\n      \"@Alyssa_Milano May I ask you for a favor. Could you show some twitterluv to @MissBethAnn. She tweets about baseball. Thanks.\",\n  },\n  {\n    ItemID: 68124,\n    SentimentText: \"@brunobelon Bom dia, Coruja.\",\n  },\n  {\n    ItemID: 36488,\n    SentimentText:\n      \"@alexlobov that would be assuming all Pakistani women think alike. Fallacious, to say the least\",\n  },\n  {\n    ItemID: 45907,\n    SentimentText:\n      \"@antonie now that's what they call suffering for Jesus (and/or a slave free world)\",\n  },\n  {\n    ItemID: 94767,\n    SentimentText: \"@coviegirl I know...I'm seriously worried about her.\",\n  },\n  {\n    ItemID: 72080,\n    SentimentText:\n      \"@AngelaLynnTweet I miss going to the movies...or going out on the weekends for that matter. Have a great weekend!\",\n  },\n  {\n    ItemID: 9672,\n    SentimentText:\n      \"Kill Bill and Kung Fu star David Carradine has been found dead in a Bangkok hotel room on Thursday.. Damn!\",\n  },\n  {\n    ItemID: 15979,\n    SentimentText: \". dealing with my personal problem\",\n  },\n  {\n    ItemID: 73955,\n    SentimentText: \"@Annanomaly  Tear not teat, LOL...\",\n  },\n  {\n    ItemID: 6972,\n    SentimentText: \"#happybdaykrisallen I MISS IDOL !\",\n  },\n  {\n    ItemID: 12879,\n    SentimentText: \"*Tink'ing* is no fun\",\n  },\n  {\n    ItemID: 94199,\n    SentimentText:\n      \"@corpineda yeah.. I agree.. I just woke up and late too haha cause i didnt see the sun coming in thru my window :/ hello kitty tomorrow!\",\n  },\n  {\n    ItemID: 5279,\n    SentimentText:\n      \"#FF My cyber homeboy thought i forgot about him  follow him hes a funny dude!!! @MeLallmighty\",\n  },\n  {\n    ItemID: 16118,\n    SentimentText: \":O i just lost a follower  was it the skin thing ?\",\n  },\n  {\n    ItemID: 12940,\n    SentimentText: \"*tap tap tap* back to work\",\n  },\n  {\n    ItemID: 81395,\n    SentimentText: \"@ChaunceyCC hahaa.. you are funny.\",\n  },\n  {\n    ItemID: 51926,\n    SentimentText:\n      \"@auraseeingever  *is glad ever choose to be an immortal with him* ||I Love You\",\n  },\n  {\n    ItemID: 19061,\n    SentimentText:\n      \"@_anea I have a great easy recipe for the new site! I just have to think up a wow food name for it\",\n  },\n  {\n    ItemID: 82373,\n    SentimentText:\n      \"@carsonjdaly they are saying at this point there would be no fuel left\",\n  },\n  {\n    ItemID: 99216,\n    SentimentText: \"@CRAZiixLOVEE yooooo  missed you hun &lt;3\",\n  },\n  {\n    ItemID: 58287,\n    SentimentText: \"@beautifulfro lend me a razor.\",\n  },\n  {\n    ItemID: 66602,\n    SentimentText:\n      \"@blueboxjesse i hope you are not carrying servers in the age of cloud computing    add some offers here www.confoffers.com\",\n  },\n  {\n    ItemID: 41360,\n    SentimentText:\n      \"@amyypee omg my dad stole my DS so i dont have mine now  i love playing pokemon on DS.\",\n  },\n  {\n    ItemID: 39747,\n    SentimentText:\n      \"@amalinaaa http://bit.ly/4bsDXs  vote for meeee can? That was not supposed to be a question\",\n  },\n  {\n    ItemID: 65597,\n    SentimentText:\n      \"@BrentDPayne could you bequeath your black book to me?  (via @awoods) -- not too many entries but sure!\",\n  },\n  {\n    ItemID: 11798,\n    SentimentText: \"(@dj8171) Oh snap vaccinations on Monday\",\n  },\n  {\n    ItemID: 56406,\n    SentimentText:\n      \"@BCESTABLISHED06 some hoe must have really pissed u off today sweety\",\n  },\n  {\n    ItemID: 75297,\n    SentimentText:\n      \"@btnalv They are beautiful Bettina, just like you  Get well soon.\",\n  },\n  {\n    ItemID: 26190,\n    SentimentText: \"@686snow damn my second place finish\",\n  },\n  {\n    ItemID: 72270,\n    SentimentText: \"@Calvas  eish que mau..\",\n  },\n  {\n    ItemID: 55179,\n    SentimentText: \"@AzzyMichelle Of course you were here when I wasn't.\",\n  },\n  {\n    ItemID: 31630,\n    SentimentText:\n      \"@alexderossi never knew you could sing  ganda po ng vesion mo..\",\n  },\n  {\n    ItemID: 77796,\n    SentimentText:\n      \"@aquapisces85 Hah! I'd do it, out of love, but then I've been procrastinating myself.\",\n  },\n  {\n    ItemID: 84838,\n    SentimentText:\n      \"@chrisamayo yeh ive blocked her about 10 times today, and just noticed she is following again\",\n  },\n  {\n    ItemID: 65144,\n    SentimentText: \"@BrazillofBLAK cuz u never get my texts\",\n  },\n  {\n    ItemID: 37627,\n    SentimentText: \"@allanasaur oh it keeps turing off  for no reason\",\n  },\n  {\n    ItemID: 78279,\n    SentimentText:\n      \"@cchastain Thanks Cindy. Just called it how I see it. Thanks for asking a great question inspired by @martinpolley @fred_beecher @sgmitch\",\n  },\n  {\n    ItemID: 93869,\n    SentimentText:\n      \"@coopcakes shut up! its not that bad babe! gee i want to watch some series! one tree hill for example - last episode  is Peyton alive?\",\n  },\n  {\n    ItemID: 45659,\n    SentimentText: \"@antsmoove lol. Yup! all day\",\n  },\n  {\n    ItemID: 35243,\n    SentimentText:\n      \"@alydenisof http://twitpic.com/4cz3s - Awww. Loving the new haircut. You and Felicia look like you're having a good time also.\",\n  },\n  {\n    ItemID: 63547,\n    SentimentText:\n      \"@bo_s @Domipost MotoMania with his Motorola Touch HD fake pic?\",\n  },\n  {\n    ItemID: 26195,\n    SentimentText: \"@69s0f1ne  can't wait to see juuu.\",\n  },\n  {\n    ItemID: 61161,\n    SentimentText:\n      \"@Bex_Smith haha i accidently hit trace cyrus aswell and i sent breeze in ppittsburg to him too hahaha\",\n  },\n  {\n    ItemID: 10016,\n    SentimentText:\n      \"I grew up on the street, not the hood... the Sesame THIS IS WHY I LOVE SCRUBS. Season 9 is going to be fail though\",\n  },\n  {\n    ItemID: 20637,\n    SentimentText:\n      \"@:ayku, y a pas longtemps, tu as post√© un twit: Waiting for @Mat_'s return in order to translate eLive show ... why ?\",\n  },\n  {\n    ItemID: 19981,\n    SentimentText:\n      \"@ my dads house. Uh its sooooo boring here, nothing to do; except tweet\",\n  },\n  {\n    ItemID: 67486,\n    SentimentText:\n      \"@bodaciousgirl Once my headache went away great weekend. Poor sponge  What did you do? Oh yeah brats tonight finally.\",\n  },\n  {\n    ItemID: 32528,\n    SentimentText:\n      \"@ageofconspiracy i miss having our elevator parties and then breaking the elevator\",\n  },\n  {\n    ItemID: 28275,\n    SentimentText: \"@ABPink haha you all still on the sofa then?\",\n  },\n  {\n    ItemID: 98255,\n    SentimentText: \"@contentwhore u did!!!! we took a picture together\",\n  },\n  {\n    ItemID: 82806,\n    SentimentText: \"@ashleytisdale PLEASE!\",\n  },\n  {\n    ItemID: 18290,\n    SentimentText: \"@_Ely_ Check your DM.\",\n  },\n  {\n    ItemID: 62624,\n    SentimentText:\n      \"@blasphy yuh i always get super sick if i dont eat before getting in some kind of vehicle for a prolonged amount of time\",\n  },\n  {\n    ItemID: 792,\n    SentimentText: \"boring nite...damn I guess I better get use to this\",\n  },\n  {\n    ItemID: 37329,\n    SentimentText: \"@alisonhaislip good job at E3 today. you looked great too.\",\n  },\n  {\n    ItemID: 2151,\n    SentimentText: \"goodnight...\",\n  },\n  {\n    ItemID: 19513,\n    SentimentText: \"@_DESiMO_   Thats a good one...\",\n  },\n  {\n    ItemID: 85289,\n    SentimentText: \"@Chriscornell why isnt everyone with you?\",\n  },\n  {\n    ItemID: 23574,\n    SentimentText: \"@17THSNOOP Yea i kno\",\n  },\n  {\n    ItemID: 24171,\n    SentimentText:\n      \"@1ChazD am chillaxin at home right now with the Fam,  prolly go somewhere tonight, but dnt know where yet, wkend looking bleak\",\n  },\n  {\n    ItemID: 37003,\n    SentimentText:\n      \"@alexissraee AAHH! Your new sunglasses look awesome on you  So cute.\",\n  },\n  {\n    ItemID: 57706,\n    SentimentText: \"@amyaeroplane I know my comp is being really slow\",\n  },\n  {\n    ItemID: 24048,\n    SentimentText:\n      \"@19mark90 HELLLOOO  WHAT ARE U GUYS DOING UP STILL??! waiting for me i presume?? haha\",\n  },\n  {\n    ItemID: 14372,\n    SentimentText:\n      \"...and I replied. It dropped becoz over the 2 week holidays I spend every day jamming the pennies in the piggybank!... #vindication\",\n  },\n  {\n    ItemID: 46865,\n    SentimentText:\n      \"@apophistoledo They will make you into a professional baby wrapper\",\n  },\n  {\n    ItemID: 90556,\n    SentimentText:\n      \"@Clumsyflic hey flic? u cool? ye it wont let me vote either  dont no whats goin on, ahhh, its really annoyin ¬¨__¬¨\",\n  },\n  {\n    ItemID: 73978,\n    SentimentText:\n      \"@CaplinROUS think she went back to bed...same reason I missed first round today...overslept\",\n  },\n  {\n    ItemID: 73532,\n    SentimentText: \"@anjuan I always cry during that scene\",\n  },\n  {\n    ItemID: 70882,\n    SentimentText:\n      \"@BxChic7399 ugh im mad u can change ya pics like dat n i can only get dis ugly ass pic i cropped a million times 2 fit\",\n  },\n  {\n    ItemID: 70928,\n    SentimentText:\n      \"@Brennie I know!  after all these years they are making it up to me.  Too bad I'm too far back for Camden. No monkey to throw on stage\",\n  },\n  {\n    ItemID: 88130,\n    SentimentText:\n      \"@Aydsman @spoonerist @iCharlotte Did someone mention beagles?!\",\n  },\n  {\n    ItemID: 26968,\n    SentimentText:\n      \"@aeropama if that happen, mmg ecah sedeylah! everyone wants to leave me alone! got nothing except the 'internet life'.\",\n  },\n  {\n    ItemID: 42032,\n    SentimentText:\n      \"@andyjudd hehe  I'd like to be as old as u xD I'm so young..D\",\n  },\n  {\n    ItemID: 75911,\n    SentimentText:\n      \"@carriebelvin hey girlie, I got some good pics of you last night on stage...dm me ur personal email and I'll send them to you\",\n  },\n  {\n    ItemID: 10137,\n    SentimentText: \"Jeff, shut up. Nobody likes you.\",\n  },\n  {\n    ItemID: 59198,\n    SentimentText: \"@BentleyBeaver OHIO LEE-Chan. Have you slept? I ain't.\",\n  },\n  {\n    ItemID: 65211,\n    SentimentText: \"@breakfastnt wasn't much of a debate\",\n  },\n  {\n    ItemID: 11596,\n    SentimentText:\n      \"#tpb found guilty.  Booerns to that. I hate to thing about the consequences of this decision.\",\n  },\n  {\n    ItemID: 36872,\n    SentimentText:\n      \"@AlexisGentry I'm up early too!! It's crazyness for a Saturday  hope you have a great day\",\n  },\n  {\n    ItemID: 34490,\n    SentimentText:\n      \"@AKAVirtualPA @rebeccamezzino I like Mr Tweet. It's like #ff, only more permanent and forces you to give a reason\",\n  },\n  {\n    ItemID: 53928,\n    SentimentText: \"@backstreetboys AWW. I've never seen it...  LOL\",\n  },\n  {\n    ItemID: 94804,\n    SentimentText: \"@ChuckMeEurope yay thanks\",\n  },\n  {\n    ItemID: 59803,\n    SentimentText:\n      \"@bex_1210 yay! i'm so excited now. except i want to go to disneyland too\",\n  },\n  {\n    ItemID: 77593,\n    SentimentText:\n      \"@catrienmaxwell I just thought you'd be able to remember a few Lol I guess I'm just a long lost memory now  I'll just keep this one\",\n  },\n  {\n    ItemID: 95753,\n    SentimentText:\n      \"@CJulianUSA Woot! Pressure him! That's the way to do it!!!  Us fan girls thank you from the bottom of our puckish hearts, Ms. Julian.\",\n  },\n  {\n    ItemID: 68202,\n    SentimentText:\n      \"@booyahmicki we need to hang out B) we haven't since 7th grade halos.\",\n  },\n  {\n    ItemID: 93784,\n    SentimentText: \"@bbuly nomnomnom NO.\",\n  },\n  {\n    ItemID: 64722,\n    SentimentText:\n      \"@bradiewebbstack sillyheads, it's nothing to fight about, just give him $2 and forget about it\",\n  },\n  {\n    ItemID: 61252,\n    SentimentText:\n      \"@BgirlShorty hahahaha i have skittles. yumm. getting jealous huhh? lol im jk i love u shorty\",\n  },\n  {\n    ItemID: 55550,\n    SentimentText:\n      \"@b50 hehehehe!!!  Bhabhi not around or is junior asking too much of attention???\",\n  },\n  {\n    ItemID: 18126,\n    SentimentText:\n      \"..the weather may makes it, cause temp fell down to 15C from 30C which were yesterday  ...\",\n  },\n  {\n    ItemID: 82683,\n    SentimentText: \"@Carylyn awe, what's wrong with qld\",\n  },\n  {\n    ItemID: 22605,\n    SentimentText:\n      \"@8_6Eazy_C Damn it! That is also my favorite flavor....are you trying to make me eat ice cream again? I don't approve\",\n  },\n  {\n    ItemID: 25970,\n    SentimentText:\n      \"@4EverSometimes I wouldn't know. Apparently 22 is not a good age for first love...  Maybe 23, hm,..\",\n  },\n  {\n    ItemID: 15554,\n    SentimentText: \"..thanks for cutting it off, damn\",\n  },\n  {\n    ItemID: 1259,\n    SentimentText: \"at work until 4\",\n  },\n  {\n    ItemID: 10954,\n    SentimentText: \"#mtg is workig! #pulse is working! WOW!\",\n  },\n  {\n    ItemID: 10488,\n    SentimentText: \"#hoppusday is the number one trending topic.... epic\",\n  },\n  {\n    ItemID: 63288,\n    SentimentText:\n      \"@bluefur, it didn't die-it just runs under other names now. We're a tribe, right here.\",\n  },\n  {\n    ItemID: 96339,\n    SentimentText:\n      \"@claudiaintouch Yeah! I want it too. I love that Falling Slowly song. It keeps playing in my head.\",\n  },\n  {\n    ItemID: 18739,\n    SentimentText: \": Love is positive and it increases in positive realm\",\n  },\n  {\n    ItemID: 86233,\n    SentimentText:\n      \"@chadindrieri took mine an hour later lol surprising. Just finished playing hockey. Fuck me silly I'm so outta shape\",\n  },\n  {\n    ItemID: 44036,\n    SentimentText:\n      \"@AnissaESTK hey u rock i can't wate to see u tomarro at the show and i bought the new album its amazing\",\n  },\n  {\n    ItemID: 90490,\n    SentimentText:\n      \"@clrzqstn I KNOW...Darnit and idk why I am jealous..I shouldn't be I hate the feeling\",\n  },\n  {\n    ItemID: 54525,\n    SentimentText: \"@AWicher it's awesome !!\",\n  },\n  {\n    ItemID: 75018,\n    SentimentText: \"@AnotherA Sorry.\",\n  },\n  {\n    ItemID: 51178,\n    SentimentText:\n      \"@atcrawford but do you think you can? (testing how cynical you are\",\n  },\n  {\n    ItemID: 25534,\n    SentimentText: \"@adamtal yes  how can I help?\",\n  },\n  {\n    ItemID: 55417,\n    SentimentText: \"@Bash Ooh looks good. Just signed up\",\n  },\n  {\n    ItemID: 43129,\n    SentimentText:\n      \"@AngelicVampira aauummmm aauuummm hell I have been trying to teleport to you so hardly :'( its not working so no surprised arrival\",\n  },\n  {\n    ItemID: 5013,\n    SentimentText: \"Watching UP\",\n  },\n  {\n    ItemID: 27027,\n    SentimentText: \"@afarnham it's only in the 3Gs\",\n  },\n  {\n    ItemID: 32637,\n    SentimentText: \"@agirlcalledm Good morning to you!\",\n  },\n  {\n    ItemID: 56415,\n    SentimentText:\n      \"@bamparmy If Amos Lee finds any let me know! Im looking for good spots too\",\n  },\n  {\n    ItemID: 37193,\n    SentimentText:\n      \"@alikerl I need a man!....It's been a while. lol she makes me smile!!\",\n  },\n  {\n    ItemID: 8158,\n    SentimentText:\n      \"#unfollowdiddy because E Ness only has black and white footlocker tees in his closet\",\n  },\n  {\n    ItemID: 55249,\n    SentimentText:\n      \"@barefootmomma I wish I was eligible!  and that I was super busy with reviews ha ha\",\n  },\n  {\n    ItemID: 15105,\n    SentimentText:\n      \".@EmperorNorton hey, I'm all for anything that gets me $$$ for new camera equipment.\",\n  },\n  {\n    ItemID: 11790,\n    SentimentText: \"(@CalebFuck) now. I am itching my nuts.  There you go.\",\n  },\n  {\n    ItemID: 29186,\n    SentimentText: \"@acgarron   hugs and kisses from CALI!!! xoxo\",\n  },\n  {\n    ItemID: 22369,\n    SentimentText: \"@_Xat_ OWNED!\",\n  },\n  {\n    ItemID: 28720,\n    SentimentText:\n      \"@absolutspacegrl I could feel the excitement in that tweet! ;) I'll be watching the launch on NASA tv! How I love my directv!  seriously.\",\n  },\n  {\n    ItemID: 59781,\n    SentimentText: \"@BevyJean72 Graceland's nice...a little gaudy, but nice\",\n  },\n  {\n    ItemID: 96045,\n    SentimentText: \"@creolexbaby i wish i didn`t have too ,\",\n  },\n  {\n    ItemID: 53736,\n    SentimentText:\n      \"@BabyHaroldK sniffle I voted til midnite U were leading Now @6AM UR  underdog Will make anipal appeal again UR SO MUCH CUTER and I am sad\",\n  },\n  {\n    ItemID: 92044,\n    SentimentText:\n      \"@BarackObama heeeeeeeeey are u the real Obama? I'm from Spain\",\n  },\n  {\n    ItemID: 28658,\n    SentimentText: \"@abookinhand\",\n  },\n  {\n    ItemID: 73624,\n    SentimentText: \"@broddo Saffer arm under the ball\",\n  },\n  {\n    ItemID: 71239,\n    SentimentText: \"@andyclemmensen YES! You better come to Perth\",\n  },\n  {\n    ItemID: 62311,\n    SentimentText: \"@bkmacdaddy Well knowing that made mine... so we're even.\",\n  },\n  {\n    ItemID: 48187,\n    SentimentText: \"@altimet nice one brother!\",\n  },\n  {\n    ItemID: 14783,\n    SentimentText: \"...yeah, the sun is shining....\",\n  },\n  {\n    ItemID: 74456,\n    SentimentText: \"@annetteknight Hey they're - great to see you on twitter!\",\n  },\n  {\n    ItemID: 70179,\n    SentimentText: \"@BravoTV NOOO real housewives of atlanta is awful\",\n  },\n  {\n    ItemID: 51209,\n    SentimentText:\n      \"@athanaelucev Thanks so much Athanae!  Well, you can go in my place then!\",\n  },\n  {\n    ItemID: 41642,\n    SentimentText:\n      \"@AndersWass  thats very true..  it just gets really confusing with whose up and who isnt.. ;)\",\n  },\n  {\n    ItemID: 27829,\n    SentimentText:\n      \"@ab_p just recovering from some online training i've just had...phew! tea time, me thinks! wanna cuppa?\",\n  },\n  {\n    ItemID: 92671,\n    SentimentText: \"@ComedyQueen welcome back\",\n  },\n  {\n    ItemID: 37194,\n    SentimentText:\n      \"@alikitty619 For sure! You're awesome so woo!!  Have you gotten anything new lately?\",\n  },\n  {\n    ItemID: 94001,\n    SentimentText:\n      \"@chriswhite65 I know  Useful if mugged though, surely ;) Product description: 95% metal, 4% cotton, 1% silk!\",\n  },\n  {\n    ItemID: 83987,\n    SentimentText: \"@Chl0 hahaha  don't worry I won't say anything!!!!  yet\",\n  },\n  {\n    ItemID: 41511,\n    SentimentText:\n      \"@andyclemmensen http://twitpic.com/4lcr8 - hahah, he has facial hair but he cant have chest hair   lool\",\n  },\n  {\n    ItemID: 63747,\n    SentimentText:\n      \"@bobtheostrich Well I dunno know if I qualify then.....    What do u think?\",\n  },\n];\n","import React from \"react\";\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport {\n  irisColumns,\n  irisColumnsMap,\n  iris,\n  irisUnits,\n} from \"static/datasets/iris\";\nimport {\n  tweets,\n  twitterColumns,\n  twitterColumnsMap,\n} from \"static/datasets/tweets\";\nimport { SampleDataset, Tasks, Models } from \"state/StateTypes\";\n\nexport const datasetMetadata = {\n  [SampleDataset.IRIS]: {\n    title: \"Iris\",\n    subtitle: \"The popular dataset featuring flower traits\",\n    icon: <SendIcon fontSize=\"small\" />,\n    instances: 150,\n    attributes: 4,\n    classes: 3,\n    tags: [\"Numeric\"],\n    columns: irisColumns,\n    columnsMap: irisColumnsMap,\n    data: iris,\n    units: irisUnits,\n\n    keywords: [\"flower\", \"iris\", \"petal\"],\n    task: Tasks.CLASSIFICATION,\n    model: Models.KNN,\n  },\n  [SampleDataset.TWITTER]: {\n    title: \"Twitter\",\n    subtitle: \"A small sample of random tweets\",\n    icon: <InboxIcon fontSize=\"small\" />,\n    instances: 200,\n    tags: [\"Text\"],\n    columns: twitterColumns,\n    columnsMap: twitterColumnsMap,\n    data: tweets,\n\n    keywords: [\"tweet\", \"twitter\", \"sentiment\"],\n    task: Tasks.NATURAL_LANGUAGE,\n    model: [Models.SENTIMENT_ANALYSIS, Models.ENTITY_RECOGNITION]\n  },\n  [SampleDataset.BOSTON]: {\n    title: \"Boston\",\n    subtitle: \"Prices and other Boston housing data\",\n    icon: <DraftsIcon fontSize=\"small\" />,\n    instances: 506,\n    attributes: 13,\n    tags: [\"Numeric\", \"Categorical\"],\n    columns: [],\n    columnsMap: {},\n    data: [],\n    units: [],\n\n    keywords: [\"boston\", \"house\", \"housing\", \"home\"],\n    task: Tasks.REGRESSION,\n    model: Models.LINEAR_REGRESSION,\n  },\n};\n","import { Tasks, Models } from \"state/StateTypes\"\nimport { NNActions } from \"state/NNActions\"\nimport { datasetMetadata } from \"static/datasets/metadata\"\n\n// TODO: refactor elsewhere?\n\nconst intentToTask = {\n    task_reg: Tasks.REGRESSION,\n    task_class: Tasks.CLASSIFICATION,\n    task_nlp: Tasks.NATURAL_LANGUAGE,\n}\n\nconst regressionEntityToModel = {\n    \"poisson:poisson\": Models.POISSON_REGRESSION,\n    \"ordinal:ordinal\": Models.ORDINAL_REGRESSION,\n}\n\nconst classificationEntityToModel = {\n    \"knn:knn\": Models.KNN,\n}\n\n\nexport const getWitResult = async (wit, utterance) => {\n    return await wit.message(utterance);\n}\n\nexport const extractSampleDataset = (statement) => {\n    console.log(\"Checkng for sample data match!\")\n    let sampleDataset = null;\n    let matchedKeyword = null;\n    let matchedTask = null;\n    let matchedModel = null;\n    matchingProcess:\n    for (const dataset in datasetMetadata) {\n        const entry = datasetMetadata[dataset];\n        const keywords = entry.keywords;\n        for (const keyword of keywords) {\n            if (statement.includes(keyword)) {\n                console.log(\"MATCH: \", keyword);\n                matchedKeyword = keyword;\n                matchedTask = entry.task;\n                matchedModel = entry.model;\n                sampleDataset = dataset;\n                break matchingProcess;\n            }\n        }\n    }\n    return [matchedTask, matchedModel, sampleDataset, matchedKeyword];\n} \n\nexport const extractTask = (witResponse) => {\n    let intents = witResponse.intents;\n    let task = null;\n    if (intents.length > 0 && intents[0].confidence > 0.6) {\n        let topIntent = intents[0];\n        let topIntentName = topIntent.name;\n        task = intentToTask[topIntentName];\n    }\n    return task;\n}\n\nexport const extractSubject = (witResponse) => {\n    let entities = witResponse.entities;\n    let subject = null;\n    if (\"subject:subject\" in entities) {\n      let subjectArray = entities[\"subject:subject\"];\n      let subjectObject = subjectArray[0];\n      subject = subjectObject[\"body\"];\n    }\n    return subject;\n}\n\nexport const extractRegressionModel = async (statement, wit) => {\n    const witResponse = await getWitResult(wit, statement);\n    let entities = Object.keys(witResponse.entities); // note that this counts matches equally\n    let models = entities.map(entity => regressionEntityToModel[entity]);\n    if (models.length === 0) {\n        return Models.LINEAR_REGRESSION;\n    }\n    return models[0]; // returns first match\n}\n\nexport const extractClassificationModel = async (statement, wit) => {\n    const witResponse = await getWitResult(wit, statement);\n    let entities = Object.keys(witResponse.entities); // note that this counts matches equally\n    let models = entities.map(entity => classificationEntityToModel[entity]);\n    if (models.length === 0) {\n        return Models.NEURAL_NETWORK_FF;\n    }\n    return models[0]; // returns first match\n}\n\nexport const extractArchitectureChange = (witResponse, nn_state) => {\n    let intents = witResponse.intents;\n    let entities = witResponse.entities;\n    let intent = intents?.[0]?.name;\n    let count;\n    \n    switch(intent) {\n\n        case \"reset\":\n            return {type: NNActions.RESET}\n\n        case \"activation\":\n            let activation = entities?.[\"type:type\"]?.[0]?.value;\n            return activation ? {type: NNActions.SET_HIDDEN_ACTIVATIONS, activation: activation} : null;\n\n        case \"initializer\":\n            let initializer = entities?.[\"type:type\"]?.[0]?.value;\n            return initializer ? {type: NNActions.SET_ALL_INITIALIZERS, initializer: initializer} : null;\n\n        case \"dimension\":\n            count = entities?.[\"wit$number:number\"]?.[0]?.value;\n            let target = entities?.[\"target:target\"]?.[0]?.value; \n            switch (target) {\n                case \"inputs\": \n                    return count ? {type: NNActions.SET_NODES, layer: 0, nodes: count} : null;\n                case \"outputs\":\n                    return count ? {type: NNActions.SET_NODES, layer: nn_state.layers.length - 1, nodes: count} : null;\n                case \"nodes\":\n                    return count ? {type: NNActions.SET_HIDDEN_NODES, nodes: count} : null;      \n                default:\n                    return null;\n            }\n\n        case \"layers\":\n            let instruction = entities?.[\"instruction:instruction\"]?.[0]?.value;\n            let order = entities?.[\"order:order\"]?.[0]?.value ?? \"last\";\n            count = entities?.[\"wit$number:number\"]?.[0]?.value;\n            switch (instruction) {\n                case \"use\":\n                    return count ? {type: NNActions.SET_HIDDEN_LAYERS, layers: count} : null;\n                case \"add\":\n                    count = count ?? 1;\n                    return {type: NNActions.ADD_LAYERS, layers: count};\n                case \"remove\":\n                    count = count ?? 1;\n                    return {type: NNActions.REMOVE_LAYERS, layers: count, fromEnd: order === \"last\"}\n                default:\n                    return null;\n\n            }\n        default:\n            return null;\n    }\n    \n    // let architectureChange = {};\n    // const intent = witResponse.intent;\n    // architectureChange.intent = intent;\n}\n\n// const getOrDefault = (obj, key, defaultValue) => {\n\n// }","import { Actions } from \"state/Actions\";\nimport { StepperState, DatasetCategory, SampleDataset, Tasks, Models } from \"state/StateTypes\";\nimport * as msgs from \"conversation/msgs\";\nimport { \n    getWitResult, \n    extractTask, \n    extractSubject, \n    extractSampleDataset, \n    extractRegressionModel, \n    extractClassificationModel, \n    extractArchitectureChange\n} from \"conversation/ConversationUtils\";\n\nexport const responseToMessage = async (userMessage, wits, state, dispatch, nn_state, nn_dispatch) => {\n    switch (state.stepper_state) {\n        case StepperState.TASK:\n            return await taskStep(userMessage, wits.task, state, dispatch);\n        // case StepperState.DATASET:\n        //     return dataStep(userMessage, wit, state, dispatch);\n        case StepperState.MODEL:\n            return modelStep(userMessage, wits.model, state, dispatch);\n        case StepperState.VISUALIZE:\n            if (state.model === Models.NEURAL_NETWORK_FF) {\n                return architectureStep(userMessage, wits.nn, nn_state, nn_dispatch);\n            }\n            break;\n        default:\n            break;\n    }\n\n}\n\nconst taskStep = async (userMessage, wit, state, dispatch) => {\n    console.log(\"RESPOND MESSAGE -- TASK STEP\");\n\n    // get the wit result\n    const witResult = await getWitResult(wit, userMessage);\n    console.log(\"Wit result: \", witResult);\n\n    // extract the subject or null\n    const subject = extractSubject(witResult);\n    console.log(\"Extracted subject: \", subject);\n\n    let extractedTask = extractTask(witResult);\n    console.log(\"Extracted task: \", extractedTask);\n\n    // extract the sample dataset or null\n    const effectiveSubject = (subject  && extractedTask) ? subject : userMessage;\n    console.log(\"Final effective subject: \", effectiveSubject);\n    const [taskForSampleDataset, modelForSampleDataset, sampleDataset, matchedKeyword] = extractSampleDataset(\n        effectiveSubject\n    );\n    console.log(\"Sample data matches: \");\n    console.log(taskForSampleDataset);\n    console.log(modelForSampleDataset);\n    console.log(sampleDataset);\n    console.log(matchedKeyword);\n\n    // define the task or null\n    const task = taskForSampleDataset ?? extractedTask;\n    console.log(\"Final task decision: \", task);\n\n    if (sampleDataset) {\n        // update dataset type\n        dispatch({\n            type: Actions.SET_DATASET_CATEGORY,\n            dataset_category: DatasetCategory.SAMPLE,\n        });\n        dispatch({\n            type: Actions.SET_DATASET_CATEGORY_OTTO,\n            dataset_category: DatasetCategory.SAMPLE,\n        });\n        // update sample dataset\n        dispatch({\n            type: Actions.SET_SAMPLE_DATASET,\n            sample_dataset: sampleDataset,\n        });\n        dispatch({\n            type: Actions.SET_SAMPLE_DATASET_OTTO,\n            sample_dataset: sampleDataset,\n        });\n        // update model\n        if (task === Tasks.NATURAL_LANGUAGE) {\n            for (const nlpModel of modelForSampleDataset) {\n                dispatch({\n                    type: Actions.TOGGLE_NLP_MODEL,\n                    model: nlpModel\n                });\n                dispatch({\n                    type: Actions.TOGGLE_NLP_MODEL_OTTO,\n                    model: nlpModel\n                });\n            }\n        } else {\n            dispatch({\n                type: Actions.SET_MODEL,\n                model: modelForSampleDataset,\n            });\n            dispatch({\n                type: Actions.SET_MODEL_OTTO,\n                model: modelForSampleDataset,\n            });\n        }\n    }\n\n    if (task) {\n        // update task state\n        dispatch({\n            type: Actions.SET_TASK,\n            task: task,\n        });\n        dispatch({\n            type: Actions.SET_TASK_OTTO,\n            task: task,\n        });\n\n        return msgs.TaskRecommendation(task);\n    }\n\n    return msgs.TaskInfo();\n\n}\n\nconst modelStep = async (userMessage, wit, state, dispatch) => {\n    console.log(\"RESPOND MESSAGE -- MODEL STEP\");\n\n    const task = state.task;\n    let model = state.model;\n    let nlp_models = state.nlp_models;\n\n    console.log(\"Task rn: \", task);\n    console.log(\"Model rn: \", model, nlp_models);\n\n    if (state.task !== Tasks.NATURAL_LANGUAGE) {\n        switch (task) {\n            case Tasks.REGRESSION:\n                model = await extractRegressionModel(userMessage, wit);\n                break;\n            case Tasks.CLASSIFICATION:\n                model = await extractClassificationModel(userMessage, wit) ||\n                    Models.NEURAL_NETWORK_FF;\n                break;\n            default:\n                break;\n        }\n    \n        dispatch({\n            type: Actions.SET_MODEL,\n            model: model,\n        });\n        dispatch({\n            type: Actions.SET_MODEL_OTTO,\n            model: model,\n        });\n        return msgs.ModelRecommendation(model);\n    }\n   \n\n}\n\n/** Model building via Otto */\nconst architectureStep = async (userMessage, wit, nn_state, nn_dispatch) => {\n\n    console.log(\"Architecture step: \", nn_state);\n\n    const witResult = await getWitResult(wit, userMessage); \n\n    const architectureChange = extractArchitectureChange(witResult, nn_state);\n    if (architectureChange) {\n        nn_dispatch(architectureChange);\n    }\n    //return JSON.stringify(architectureChange);\n    //return JSON.stringify(witResult);\n\n}","import { StepperState, Tasks, Models, Preprocessors } from \"state/StateTypes\";\nimport * as msgs from \"conversation/msgs\"\nimport { Actions } from \"state/Actions\";\n\nexport const responseToState = (state) => {\n    switch (state.stepper_state) {\n        // case StepperState.TASK:\n        //     return taskStep(userMessage, wits.task, state, dispatch);\n        case StepperState.DATASET:\n            return dataStep(state);\n        case StepperState.MODEL:\n            return modelStep(state);\n        case StepperState.PREPROCESSORS:\n            return preprocessorsStep(state);\n        case StepperState.VISUALIZE:\n            return visualizeStep(state);\n        default:\n            break;\n    }      \n}\n\nconst dataStep = (state) => {\n    console.log(\"RESPOND STATE -- DATA STEP\");\n\n    const responses = [];\n    responses.push(msgs.AdvanceFromTask(state.task));\n\n    const isRecommended = state.dataset_category_otto && (state.dataset_category_otto === state.dataset_category);\n    console.log(\"isRecommended? \", isRecommended);\n\n    if (isRecommended) {\n        responses.push(msgs.DatasetPreRecommendation());\n    } else {\n        responses.push(msgs.DatasetPreface());\n    }\n\n    return responses;\n}\n\nconst modelStep = (state) => {\n    console.log(\"RESPOND STATE -- MODEL STEP\");\n\n    const responses = [];\n    responses.push(msgs.AdvanceFromDataset(state.dataset_category, state.sample_dataset));\n\n    const isRecommendedSupervised = state.task !== Tasks.NATURAL_LANGUAGE && (state.model_otto) && (state.model_otto === state.model);\n    const isRecommendedNLP = state.task === Tasks.NATURAL_LANGUAGE && (state.nlp_models_otto.length > 0) && (state.nlp_models_otto.length === state.nlp_models.length);\n    console.log(\"isRecommended? \", isRecommendedSupervised, isRecommendedNLP);\n\n    responses.push(msgs.ModelPreface(state.task));\n\n    if (isRecommendedSupervised) {\n        responses.push(msgs.ModelPreRecommendation(state.model));\n    } else if (isRecommendedNLP) {\n        responses.push(msgs.ModelPreRecommendation(null, state.nlp_models));\n    } else {\n        switch (state.task) {\n            case Tasks.CLASSIFICATION:\n                responses.push(msgs.ClassificationModelQuestion());\n                break;\n            case Tasks.REGRESSION:\n                responses.push(msgs.RegressionModelQuestion());\n                break;\n            case Tasks.NATURAL_LANGUAGE:\n                responses.push(msgs.NLPModelInfo());\n                break;\n            default:\n                break;\n        }\n    }\n    return responses;\n}\n\nconst preprocessorsStep = (state) => {\n    return [\n        msgs.AdvanceFromModel(state.task),\n        msgs.PreprocessorRecommendation()\n    ];\n}\n\n/** Note: this is called from the reducer */\nexport const preprocessorsModifier = (state) => {\n\n    // dispatch({\n    //     type: Actions.SET_MODEL,\n    //     model: Models.KNN,\n    // })\n    if (state.task === Tasks.NATURAL_LANGUAGE) {\n        state.preprocessors = [Preprocessors.TEXT_CLEANING];\n        state.preprocessors_otto = state.preprocessors;\n        // dispatch({\n        //     type: Actions.CLEAR_PREPROCESSORS_INCLUDING_OTTO,\n        // });\n        // dispatch({\n        //     type: Actions.TOGGLE_PREPROCESSOR,\n        //     preprocessor: Preprocessors.TEXT_CLEANING,\n        // });\n        // dispatch({\n        //     type: Actions.TOGGLE_PREPROCESSOR_OTTO,\n        //     preprocessor: Preprocessors.TEXT_CLEANING,\n        // });\n        \n    } else {\n        switch (state.model) {\n            case Models.LINEAR_REGRESSION:\n            case Models.POISSON_REGRESSION:\n            case Models.ORDINAL_REGRESSION:\n                state.preprocessors = [Preprocessors.NORMALIZATION, Preprocessors.PCA];\n                break;\n            case Models.KNN:\n                state.preprocessors = [Preprocessors.NORMALIZATION];\n                break;\n            case Models.NEURAL_NETWORK_FF:\n                state.preprocessors = [Preprocessors.NORMALIZATION, Preprocessors.PCA];\n                break;\n            default:\n                break;\n        }\n        state.preprocessors_otto = state.preprocessors;\n    }\n    return state;\n    \n}\n\nconst visualizeStep = (state) => {\n    if (state.model === Models.NEURAL_NETWORK_FF) {\n        return msgs.NeuralNetworkPreface();\n    }\n}","import {responseToMessage} from \"conversation/RespondMessage\";\nimport {responseToState} from \"conversation/RespondState\";\nconst { Wit, log } = require(\"node-wit\");\nconst token = require(\"TOKEN.json\");\n\nexport default class Conversation {\n\n    constructor(say) {\n        this.say = say;\n        this.ottoTask = new Wit({\n            accessToken: token.task,\n        });\n        this.ottoModel = new Wit({\n            accessToken: token.model,\n        });\n        this.ottoNN = new Wit({\n            accessToken: token.nn,\n        });\n        this.wits = {\n            task: this.ottoTask,\n            model: this.ottoModel,\n            nn: this.ottoNN,\n        };\n    }\n\n    sayMessages = async (messages) => {\n        if (!Array.isArray(messages)) {\n            messages = [messages];\n        }\n        messages = messages.flat(1);\n        for (let message of messages) {\n            if (message != null) {\n                let d = delay(message);\n                await new Promise((r) => setTimeout(r, d/2));\n                this.say(message);\n                await new Promise((r) => setTimeout(r, d/2));\n            }\n        }\n    };\n    \n    handleUserMessage = async (userMessage, state, dispatch, nn_state, nn_dispatch) => {\n        document.getElementsByClassName(\"rcw-sender\")[0].message.value = \"\";\n        console.log(`handleUserMessage in Conversation: ${userMessage}`);\n        console.log(\"State: \", state);\n\n        // const [state, dispatch] = null;\n        await this.sayMessages(\n            await responseToMessage(userMessage, this.wits, state, dispatch, nn_state, nn_dispatch)\n        ); \n    };\n\n    handleStateAdvance = (state) => {\n        console.log(`State has been advanced!`);\n        console.log(\"State: \", state);\n\n        this.sayMessages(\n            responseToState(state)\n        );\n    };\n\n    render() {\n        return null;\n    }\n\n}\n\nfunction delay(msg) {\n    const WPM = 225;\n    const length = msg.length;\n    const delayMS = (length / 3.5 / WPM) * 60 * 1000;\n    return delayMS;\n    //return delayMS < 2500 ? delayMS : 2500;\n    //return 100; \n}","import { Activations, Initializers } from \"./hyperparams\";\n\nexport class Layer {\n\n    constructor(units, activation, initializer) {\n        this.units = units;\n        this.activation = activation ? activation : Activations.RELU;\n        this.initializer = initializer ? initializer : Initializers.GLOROT;\n    }\n\n}","import {\n  Optimizers,\n  Losses,\n  Activations,\n  Initializers,\n} from \"nn-architecture/hyperparams\";\nimport { Layer } from \"nn-architecture/Layer\";\n\nexport class FeedforwardNN {\n  constructor(state) {\n    this.layers = state.layers;\n    // this.activation = state.activation;\n    // this.outputActivation = state.outputActivation;\n    // this.initializer = state.initializer;\n    this.optimizer = state.optimizer;\n    this.loss = state.loss;\n  }\n\n  // pushLayer() {\n  //   const layers = this.layers;\n  //   const lastHiddenLayer = layers[layers.length - 2];\n  //   const lastHiddenSize = lastHiddenLayer.units;\n  //   const newLayer = new Layer(lastHiddenSize);\n  //   layers.splice(layers.length - 1, 0, newLayer);\n  // }\n\n  // TODO: implement\n  popLayer() {\n    const layers = this.layers;\n    layers.splice(layers.length - 2, 1);\n  }\n}\n\n//  setBatchSize(newBatch) {\n//      this.batchSize = newBatch;\n//  }\n//  setLearnRate(newLearn) {\n//      this.learnRate = newLearn;\n//  }\n\n//  setOptimizer(newOptimizer){\n//     this.optimizer = newOptimizer;\n// }\n\n//  setLoss(newLoss) {\n//      this.loss = newLoss;\n//  }\n\n//  setEpochs(newEpochs) {\n//      this.epochs = newEpochs;\n//  }\n\n//  setlearningRateDecay(newDecay) {\n//      this.learningRateDecay = newDecay;\n//  }\n\n// // setInit(newInit) {\n// //     this.initializer = newInit;\n// // }\n\n// addLayer(newLayer) {\n//     this.arrLayers.push(newLayer);\n// }\n\n// removeLayer(index) {\n//     this.arrLayers.splice(index, 1);\n// }\n","import React from \"react\";\nimport { Sigma, RandomizeNodePositions, RelativeSize } from \"react-sigma\";\nimport { FeedforwardNN } from \"nn-architecture/Network\";\nimport { useNNState } from \"state/NNState\";\nimport { NNActions } from \"state/NNActions\";\n\nclass UpdateNodeProps extends React.Component {\n  componentWillReceiveProps({ sigma, nodes, edges }) {\n    sigma.graph.clear();\n    sigma.graph.read({ nodes, edges });\n    sigma.refresh();\n  }\n\n  render = () => null;\n}\n\nconst onClickNodeFunc = (event, dispatch) => {\n  const layer = Number(event.data.node.id.split(\",\")[0]);\n  dispatch({\n    type: NNActions.SET_SELECTED_LAYER,\n    layer,\n  });\n};\n\n// export const getSigma = (data, dispatch) => {\n//   console.log(data);\n//   return (\n\n//   );\n// };\n\nexport const toGraph = (network, coloredLayer) => {\n  const layers = network.layers;\n\n  let maxNodeCount = getMaxNodeCount(network);\n\n  const nodes = [];\n  const edges = [];\n  let prevLayerNodes = []; // cache\n\n  for (let i = 0; i < layers.length; i++) {\n    const layer = layers[i];\n    const nodeCount = layer.units;\n\n    const x = i * 0.2;\n    const color = i === coloredLayer ? \"#e63946\" : \"#007ea7\";\n\n    const vgap = 0.15 - nodeCount / 200;\n    const renderHeight = (nodeCount - 1) * vgap;\n    const initY = (2.0 - renderHeight) / 2;\n\n    const thisLayerNodes = [];\n\n    for (let j = 0; j < nodeCount; j++) {\n      let y = initY + j * vgap;\n      let id = i + \",\" + j;\n      let size = 1;\n\n      let node = { x, y, size, id, color, writable: true };\n      nodes.push(node);\n      thisLayerNodes.push(node);\n    }\n\n    if (prevLayerNodes.length > 0) {\n      // TODO check this??\n      connect(prevLayerNodes, thisLayerNodes, edges);\n    }\n\n    prevLayerNodes = thisLayerNodes;\n  }\n  return [nodes, edges];\n};\n\nconst connect = (prevLayerNodes, thisLayerNodes, edges) => {\n  for (let i = 0; i < prevLayerNodes.length; i++) {\n    let prevNode = prevLayerNodes[i];\n    let source = prevNode.id;\n\n    for (let j = 0; j < thisLayerNodes.length; j++) {\n      let thisNode = thisLayerNodes[j];\n\n      let id = \"e_\" + prevNode.id + \",\" + thisNode.id;\n      let target = thisNode.id;\n      let size = 1 - (prevLayerNodes.length * thisLayerNodes.length) / 100;\n\n      let edge = { id: id, source: source, target: target, size: size };\n      edges.push(edge);\n    }\n  }\n};\n\nconst getMaxNodeCount = (network) => {\n  const layers = network.layers;\n  let max = 0;\n  for (let layer of layers) {\n    let nodeCount = layer.numNodes;\n    if (nodeCount > max) max = nodeCount;\n  }\n  return max;\n};\n\nexport default function VisualizerNNContainer() {\n  const { nn_state, nn_dispatch } = useNNState();\n  const nn = new FeedforwardNN(nn_state);\n  // nn.loss = Losses.MULTI_CLASS;\n  // console.log(networkCode(nn));\n\n  // nn.pushLayer();\n  // nn.pushLayer();\n  // console.log(networkCode(nn));\n\n  // nn.popLayer();\n  // console.log(networkCode(nn));\n  const [nodes, edges] = toGraph(nn, nn_state.selectedLayerIndex);\n  return (\n    <Sigma\n      graph={{ nodes, edges }}\n      style={{\n        height: \"95%\",\n        transform: \"translate(-50%, -10px)\",\n      }}\n      onClickNode={(event) => onClickNodeFunc(event, nn_dispatch)}\n      //onOverNode={this.onOverNodeFunc}\n      //onOutNode={this.onOutNodeFunc}\n      settings={{\n        maxNodeSize: 10,\n        maxEdgeSize: 0.3,\n        defaultNodeColor: \"#ec5148\",\n        clone: true,\n      }}\n    >\n      <UpdateNodeProps nodes={nodes} edges={edges} />\n    </Sigma>\n  );\n\n  // return getSigma(g, nn_dispatch);\n}\n","import {\n  iris,\n  irisColumns,\n  irisColumnsMap,\n  irisUnits,\n} from \"static/datasets/iris\"; // Data\nimport KNN from \"ml-knn\";\nimport { initializeWidget } from \"containers/WidgetContainer\";\nimport { ModelActions } from \"state/ModelActions\";\n\nlet knn;\nlet seperationSize; // To seperate training and test data\n\nlet data = [],\n  X = [],\n  y = [];\n\nlet trainingSetX = [],\n  trainingSetY = [],\n  testSetX = [],\n  testSetY = [];\n\nlet K, DISPATCH, typesArray;\n\nfunction init() {\n  X = [];\n  y = [];\n}\n\nexport function invoke(k: Number, dispatch) {\n  init();\n  // Set Param\n  K = k;\n  DISPATCH = dispatch;\n  data = iris;\n  seperationSize = 0.7 * data.length;\n  data = shuffleArray(data);\n  dressData();\n}\n\nexport default function dressData() {\n  /**\n   * There are three different types of Iris flowers\n   * that this dataset classifies.\n   *\n   * 1. Iris Setosa (Iris-setosa)\n   * 2. Iris Versicolor (Iris-versicolor)\n   * 3. Iris Virginica (Iris-virginica)\n   *\n   * We are going to change these classes from Strings to numbers.\n   * Such that, a value of type equal to\n   * 0 would mean setosa,\n   * 1 would mean versicolor, and\n   * 3 would mean virginica\n   */\n\n  let types = new Set(); // To gather UNIQUE classes\n\n  data.forEach((row) => {\n    types.add(row.type);\n  });\n\n  typesArray = [...types]; // To save the different types of classes.\n  data.forEach((row) => {\n    let rowArray, typeNumber;\n\n    rowArray = Object.keys(row)\n      .map((key) => parseFloat(row[key]))\n      .slice(0, 4);\n\n    typeNumber = typesArray.indexOf(row.type); // Convert type(String) to type(Number)\n\n    X.push(rowArray);\n    y.push(typeNumber);\n  });\n\n  trainingSetX = X.slice(0, seperationSize);\n  trainingSetY = y.slice(0, seperationSize);\n  testSetX = X.slice(seperationSize);\n  testSetY = y.slice(seperationSize);\n\n  train();\n}\n\nfunction train() {\n  knn = new KNN(trainingSetX, trainingSetY, { k: K });\n  test();\n}\n\nfunction test() {\n  const result = knn.predict(testSetX);\n  const testSetLength = testSetX.length;\n  const predictionError = error(result, testSetY);\n  console.log(\n    `Test Set Size = ${testSetLength} and number of Misclassifications = ${predictionError} and ${typesArray}`\n  );\n  setTimeout(function () {\n    DISPATCH({\n      type: \"KNN_DONE\",\n      knn_result_labels: result,\n      knn_expected_labels: testSetY,\n      knn_test_data: testSetX,\n      knn_columns: irisColumns,\n      knn_columns_map: irisColumnsMap,\n      knn_labels: typesArray,\n      knn_column_units: irisUnits,\n    });\n  }, 500);\n\n  //   predict();\n}\n\nfunction error(predicted, expected) {\n  let misclassifications = 0;\n  for (var index = 0; index < predicted.length; index++) {\n    if (predicted[index] !== expected[index]) {\n      misclassifications++;\n    }\n  }\n  return misclassifications;\n}\n\nfunction predict() {\n  let temp = [];\n\n  //   prompt.get(\n  //     [\"Sepal Length\", \"Sepal Width\", \"Petal Length\", \"Petal Width\"],\n  //     function (err, result) {\n  //       if (!err) {\n  //         for (var key in result) {\n  //           temp.push(parseFloat(result[key]));\n  //         }\n  //         console.log(`With ${temp} -- type =  ${knn.predict(temp)}`);\n  //       }\n  //     }\n  //   );\n}\n\n/**\n * https://stackoverflow.com/a/12646864\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n */\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n","export const ModelActions = Object.freeze({\n  SET_KNN_K: \"SET_KNN_K\",\n  SET_KNN_COLS: \"SET_KNN_COLUMNS\",\n  RUN_KNN: \"RUN_KNN\",\n  KNN_DONE: \"KNN_DONE\",\n  RUNNING: \"RUNNING\"\n  // RUN_NLP: \"RUN_NLP\"\n});\n\nexport type ModelActionType =\n  | {\n      type: ModelActions.SET_KNN_K,\n      k: Number,\n    }\n  | {\n      type: ModelActions.RUN_KK,\n    }\n  | {\n      type: ModelActions.KNN_DONE,\n    }\n  | {\n      type: ModelActions.SET_KNN_COLUMNS,\n      indices: Array<Number>,\n    }\n  | {\n      type: ModelActions.RUNNING\n    }\n  // | {\n  //     type: ModelActions.RUN_NLP,\n  //     doEntity: Boolean,\n  //     doSentiment: Boolean,\n  // }\n","import { tweets } from \"static/datasets/tweets.js\";\nimport { getWitResult} from \"conversation/ConversationUtils\";\nimport { titleCase } from \"title-case\";\nconst { Wit } = require(\"node-wit\");\nconst token = require(\"TOKEN.json\");\n\nconst ottoNLP = new Wit({\n    accessToken: token.nlp,\n});\n\nconst rename = (name) => {\n    name = name.split(\":\").pop().split(\"$\").pop();\n    name = titleCase(name);\n    name = name.replace(\"Sentiment\", \"Polarity\")\n    return name;\n}\n\nconst labelForSample = (sample, isTrait) => {\n    const entityArr = [];\n    const keyword = isTrait ? \"value\" : \"body\";\n    for (const entityName in sample) {\n        const matches = sample[entityName];\n        const firstMatch = matches[0];\n        const value = firstMatch[keyword];\n        entityArr.push(rename(entityName) + \": \" + value);\n    }\n    const entityLabel = entityArr.join(\", \");\n    return entityLabel;\n}\n\n/**\n * Generates array of data objects: {data: \"string\", entities: \"string\", sentiments: \"string\"}\n */\nexport const invokeNLP = async (doEntity, doSentiment) => {\n    // const texts = []\n    // const entityLabels = []\n    // const traitLabels = []\n\n    const nlpData = []\n\n    for (let i = 0; i < 15; i++) {\n        const nlpDatapoint = {};\n        const tweetData = tweets[i];\n        const text = tweetData[\"SentimentText\"].trim().replace(\"\\?|\\.|\\!|\\/|\\;|\\:|\\#|\\*\", \"\");\n        const resp = await getWitResult(ottoNLP, text);\n\n        if (doEntity) {\n            const entities = resp[\"entities\"];\n            const entityLabel = labelForSample(entities, false);\n            //entityLabels.push(entityLabel);\n            nlpDatapoint.entities = entityLabel;\n        }\n\n        if (doSentiment) {\n            const traits = resp[\"traits\"];\n            const traitLabel = labelForSample(traits, true);\n            //traitLabels.push(traitLabel);\n            nlpDatapoint.sentiments = traitLabel;\n        }\n        nlpDatapoint.data = text;\n        nlpData.push(nlpDatapoint);\n        //texts.push(text);\n\n    }\n    \n}  ","// For all models other than NN\n\nimport React from \"react\";\nimport { useReducer, createContext, useContext } from \"react\";\n\nimport { ModelActionType, ModelActions } from \"state/ModelActions\";\nimport { invoke } from \"js-ml/knn\";\nimport { invokeNLP } from \"js-ml/nlp\"\nimport { Models } from \"./StateTypes\";\n\nconst InitialState = () => ({\n  knn_k: 5,\n  knn_labels: [], // string labels\n  knn_result_labels: [], // label indexes\n  knn_expected_labels: [],\n  knn_test_data: [],\n  knn_columns: [],\n  knn_columns_map: {},\n  knn_column_units: [],\n  knn_column1_index: 2,\n  knn_column2_index: 1,\n\n  viz_loading: false,\n});\n\nconst initialState = InitialState();\nconst ModelStateContext = createContext(initialState);\nconst DispatchModelStateContext = createContext(() => null);\n\nfunction reducer(state, action: ModelActionType) {\n  switch (action.type) {\n    case ModelActions.SET_KNN_K:\n      return {\n        ...state,\n        knn_k: action.k,\n      };\n    case ModelActions.SET_KNN_COLS:\n      return {\n        ...state,\n        knn_column1_index: action.indices[0],\n        knn_column2_index: action.indices[1],\n      };\n    case ModelActions.RUN_KNN:\n      invoke(state.knn_k, action.dispatch);\n      return { ...state, viz_loading: true };\n    case ModelActions.KNN_DONE:\n      return {\n        ...state,\n        viz_loading: false,\n        knn_result_labels: action.knn_result_labels,\n        knn_expected_labels: action.knn_expected_labels,\n        knn_test_data: action.knn_test_data,\n        knn_columns: action.knn_columns,\n        knn_columns_map: action.knn_columns_map,\n        knn_column_units: action.knn_column_units,\n        knn_labels: action.knn_labels,\n      };\n    case ModelActions.RUNNING: //FIXME: not working\n      //alert(\"running!\");\n      return { ...state, viz_loading: true }; \n    // case ModelActions.RUN_NLP: \n    //   invokeNLP(action.doEntity, action.doSentiment);\n    //   return { ...state, viz_loading: true };\n    default:\n      return state;\n  }\n}\n\nexport const ModelStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ModelStateContext.Provider value={state}>\n      <DispatchModelStateContext.Provider value={dispatch}>\n        {children}\n      </DispatchModelStateContext.Provider>\n    </ModelStateContext.Provider>\n  );\n};\n\nexport const useModelState = () => ({\n  model_state: useContext(ModelStateContext),\n  model_dispatch: useContext(DispatchModelStateContext),\n});\n","import React from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  ZAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Label,\n} from \"recharts\";\nimport { useModelState } from \"state/ModelState\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { invoke } from \"js-ml/knn\";\nimport { modelLinear } from \"codegen/regressionCode\";\nimport { model } from \"codegen/knnCode\";\n\nconst fillColors = [\"#E76F51\", \"#2A9D8F\", \"#264653\"];\nconst shapeTypes = [\"star\", \"circle\", \"triangle\"];\n\nconst createPlotData = (state) => {\n  const {\n    knn_column1_index,\n    knn_column2_index,\n    knn_test_data,\n    knn_result_labels,\n  } = state;\n  const data = {};\n  knn_test_data.forEach((dataRow, index) => {\n    const result_category = knn_result_labels[index];\n    if (!data.hasOwnProperty(result_category)) {\n      data[result_category] = [];\n    }\n    data[result_category].push({\n      x: dataRow[knn_column1_index],\n      y: dataRow[knn_column2_index],\n    });\n  });\n  return data;\n};\n\nexport default function PlotKNN() {\n  const { model_state } = useModelState();\n  const data = createPlotData(model_state);\n  const columns = model_state.knn_columns;\n  const columnMap = model_state.knn_columns_map;\n  const xAxisColumn = columnMap[columns[model_state.knn_column1_index]];\n  const yAxisColumn = columnMap[columns[model_state.knn_column2_index]];\n\n  return (\n    <>\n      {!model_state.viz_loading ? (\n        <ScatterChart\n          width={800}\n          height={600}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis\n            type=\"number\"\n            dataKey=\"x\"\n            name={xAxisColumn}\n            unit={model_state.knn_column_units[model_state.knn_column1_index]}\n          >\n            <Label value={xAxisColumn} position=\"insideBottom\" offset={-12} />\n          </XAxis>\n          <YAxis\n            type=\"number\"\n            dataKey=\"y\"\n            name={yAxisColumn}\n            unit={model_state.knn_column_units[model_state.knn_column2_index]}\n          >\n            <Label value={yAxisColumn} angle={-90} position=\"insideLeft\" />\n          </YAxis>\n          <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n          <Legend verticalAlign=\"top\" height={36} />\n          {model_state.knn_labels.map((label, index) => (\n            <Scatter\n              name={label}\n              data={data[index]}\n              fill={fillColors[index]}\n              shape={shapeTypes[index]}\n              key={index}\n            />\n          ))}\n        </ScatterChart>\n      ) : (\n        <CircularProgress color=\"secondary\" />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"state/State\";\nimport { Models } from \"state/StateTypes\";\nimport VisualizerNNContainer from \"components/VisualizerNNContainer\";\nimport PlotKNN from \"components/PlotKNN\";\n\nexport default function PlotsContainer() {\n  const { state } = useState();\n  switch (state.model) {\n    case Models.NEURAL_NETWORK_FF:\n      return <VisualizerNNContainer />;\n    case Models.KNN:\n      return <PlotKNN />;\n    default:\n      return null;\n  }\n}\n","import React from \"react\";\nimport { useReducer, createContext, useContext } from \"react\";\n\nimport {\n  Optimizers,\n  Losses,\n  Activations,\n  Initializers,\n} from \"nn-architecture/hyperparams\";\nimport { Layer } from \"nn-architecture/Layer\";\nimport { NNActionType, NNActions } from \"state/NNActions\";\nimport PlotsContainer from \"containers/PlotsContainer\";\n\nconst InitialState = () => ({\n  layers: [\n    new Layer(3),\n    new Layer(6),\n    new Layer(5),\n    new Layer(6),\n    new Layer(5),\n    new Layer(2, Activations.SOFTMAX),\n  ],\n  optimizer: Optimizers.ADAM,\n  loss: Losses.BINARY_CLASS,\n  selectedLayerIndex: 0,\n});\n\nconst initialState = InitialState();\nconst NNStateContext = createContext(initialState);\nconst DispatchNNStateContext = createContext(() => null);\n\nfunction reducer(state, action: NNActionType) {\n  switch (action.type) {\n    case NNActions.SET_SELECTED_LAYER:\n      return {\n        ...state,\n        selectedLayerIndex: action.layer,\n      };\n    case NNActions.SET_LAYER_ACTIVATION: {\n      const layers = [...state.layers];\n      layers[action.layer].activation = action.activation;\n      return {\n        ...state,\n        layers,\n      };\n    }\n    case NNActions.SET_LAYER_INITIALIZER: {\n      const layers = [...state.layers];\n      layers[action.layer].initializer = action.initializer;\n      return {\n        ...state,\n        layers,\n      };\n    }\n\n    case NNActions.SET_NODES: {\n      const layers = [...state.layers];\n      layers[action.layer] = new Layer(action.nodes);\n      return {\n        ...state,\n        layers,\n      };\n    }\n    case NNActions.REMOVE_LAYER: {\n      const layers = [...state.layers];\n      let selectedLayerIndex = state.selectedLayerIndex;\n      if (layers.length > 2) {\n        layers.splice(action.layer, 1);\n        if (selectedLayerIndex > 0) {\n          selectedLayerIndex -= 1;\n        }\n      }\n      return {\n        ...state,\n        layers,\n        selectedLayerIndex,\n      };\n    }\n    case NNActions.ADD_LAYER: {\n      const layers = [...state.layers];\n\n      const lastHiddenLayer = layers?.[layers.length - 2];\n      const lastHiddenSize = lastHiddenLayer?.units ?? 5;\n      const newLayer = new Layer(lastHiddenSize);\n      layers.splice(layers.length - 1, 0, newLayer);\n\n      return {\n        ...state,\n        layers,\n        selectedLayerIndex: layers.length - 2, // FIXME: this can be incorrect in edge cases?\n      };\n    }\n\n    case NNActions.RESET: {\n      return initialState;\n    }\n    case NNActions.SET_HIDDEN_ACTIVATIONS: {\n      const newActivation = action.activation;\n      const layers = [...state.layers];\n      for (let i = 0; i < layers.length - 1; i++) {\n        const layer = layers[i];\n        layer.activation = newActivation;\n      }\n      return {\n        ...state,\n        layers,\n      };\n    }\n    case NNActions.SET_ALL_INITIALIZERS: {\n      const newInitializer = action.initializer;\n      const layers = [...state.layers];\n      for (let i = 0; i < layers.length; i++) {\n        const layer = layers[i];\n        layer.initializer = newInitializer;\n      }\n      return {\n        ...state,\n        layers,\n      };\n    }\n    case NNActions.SET_HIDDEN_NODES: {\n      const count = action.nodes;\n      const layers = [...state.layers];\n      for (let i = 1; i < layers.length - 1; i++) {\n        const layer = layers[i];\n        layer.units = count;\n      }\n      return {\n        ...state,\n        layers,\n      };\n    }\n    case NNActions.SET_HIDDEN_LAYERS: {\n      const layerCount = action.layers;\n      const currentLayers = [...state.layers];\n      const inputLayer = currentLayers[0];\n      const outputLayer = currentLayers[currentLayers.length - 1];\n\n      const activation = inputLayer.activation;\n      const initializer = inputLayer.initializer;\n      const nodeCountA = currentLayers?.[1]?.units ?? 5;\n      const nodeCountB = currentLayers?.[2]?.units ?? 3;\n      const newLayers = [];\n      newLayers.push(inputLayer);\n      for (let i = 0; i < layerCount; i++) {\n        const nodes = i % 2 ? nodeCountA : nodeCountB;\n        const newLayer = new Layer(nodes, activation, initializer);\n        newLayers.push(newLayer);\n      }\n      newLayers.push(outputLayer);\n      return {\n        ...state,\n        layers: newLayers,\n      };\n    }\n\n    case NNActions.ADD_LAYERS: {\n      const count = action.layers;\n      const layers = [...state.layers];\n\n      const activation = layers[0].activation;\n      const initializer = layers[0].initializer;\n      console.log(layers);\n      const nodeCountA = layers?.[layers.length - 3]?.units ?? 5;\n      const nodeCountB = layers?.[layers.length - 2]?.units ?? 3;\n\n      const outputLayer = layers.pop();\n\n      for (let i = 0; i < count; i++) {\n        const layer = new Layer(\n          i % 2 ? nodeCountB : nodeCountA,\n          activation,\n          initializer\n        );\n        layers.push(layer);\n      }\n      layers.push(outputLayer);\n      console.log(\"New layers array after ADD_LAYERS: \", layers);\n      return {\n        ...state,\n        layers: layers,\n      };\n    }\n\n    case NNActions.REMOVE_LAYERS: {\n      const fromEnd = action.fromEnd;\n      const count = action.layers;\n      let layers = [...state.layers];\n      const inputLayer = layers.shift();\n      const outputLayer = layers.pop();\n\n      if (fromEnd) layers.reverse();\n      for (let i = 0; i < count; i++) {\n        layers.shift();\n      }\n      layers = [inputLayer, ...layers, outputLayer];\n      return {\n        ...state,\n        layers: layers,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport const NNStateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <NNStateContext.Provider value={state}>\n      <DispatchNNStateContext.Provider value={dispatch}>\n        {children}\n      </DispatchNNStateContext.Provider>\n    </NNStateContext.Provider>\n  );\n};\n\nexport const useNNState = () => ({\n  nn_state: useContext(NNStateContext),\n  nn_dispatch: useContext(DispatchNNStateContext),\n});\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"state/State\";\n\nimport {\n  Widget,\n  toggleWidget,\n  addResponseMessage,\n  deleteMessages,\n} from \"react-chat-widget\";\nimport logo from \"otto_logo_clear.png\";\nimport logo2 from \"otto_logo_2.png\";\n\nimport * as msgs from \"conversation/msgs\";\nimport Conversation from \"conversation/Conversation\";\nimport { useNNState } from \"state/NNState\";\n\nconst convo = new Conversation(addResponseMessage);\n\nexport async function initializeWidget() {\n  deleteMessages();\n  await new Promise((r) => setTimeout(r, 2500));\n  convo.sayMessages(msgs.IntroQuestion());\n}\n\nexport const handleNext = (state) => {\n  convo.handleStateAdvance(state);\n}\n\nfunction WidgetContainer() {\n  const { state, dispatch } = useState();\n  const { nn_state, nn_dispatch } = useNNState();\n\n  useEffect(() => {\n    toggleWidget();\n    initializeWidget();\n  }, []);\n\n  const handleSubmit = (userMessage) => {\n    convo.handleUserMessage(userMessage, state, dispatch, nn_state, nn_dispatch);\n  };\n\n  // async function performResponse(userMessage) {\n  //   const responses = await convo.respondTo(userMessage);\n  //   await new Promise((r) => setTimeout(r, readWriteDelay(userMessage)));\n  //   for (const i in responses) {\n  //     const response = responses[i];\n  //     await new Promise((r) => setTimeout(r, readWriteDelay(response)));\n  //     addResponseMessage(response);\n  //   }\n  // }\n\n  return (\n    <Widget\n      handleSubmit={handleSubmit}\n      launcher={() => null}\n      subtitle=\"\"\n      title=\"Otto\"\n      // titleAvatar={logo}\n      profileAvatar={logo2}\n    />\n  );\n}\n\nexport default WidgetContainer;\n","import React from \"react\";\nimport { useReducer, createContext, useContext } from \"react\";\n\nimport { deleteMessages, addResponseMessage } from \"react-chat-widget\";\nimport { InitialState, StateType, StepperState } from \"state/StateTypes\";\nimport { ActionType, Actions } from \"state/Actions\";\nimport { StepperStateOrder } from \"state/StateTypes\";\nimport { handleNext } from \"containers/WidgetContainer\";\nimport { preprocessorsModifier } from \"conversation/RespondState\";\n\nimport { initializeWidget } from \"containers/WidgetContainer\";\n\n// See https://www.basefactor.com/global-state-with-react for details\nconst initialState = InitialState();\n\nexport const StateContext = createContext(initialState);\nexport const DispatchStateContext = createContext(() => null);\nconst NumSteps = StepperStateOrder.length;\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n  const getActiveStep = () => {\n    return StepperStateOrder.indexOf(state.stepper_state);\n  };\n\n  switch (action.type) {\n    case Actions.SET_TASK:\n      return { ...state, task: action.task };\n    case Actions.SET_DATASET_CATEGORY:\n      return { ...state, dataset_category: action.dataset_category };\n    case Actions.SET_MODEL:\n      return { \n        ...state, \n        model: action.model, \n        nlp_models: [], \n        nlp_models_otto: []\n      };\n    case Actions.TOGGLE_NLP_MODEL:\n      let currentModels = state.nlp_models;\n      if (currentModels.includes(action.model)) {\n        currentModels = currentModels.filter((val) => val !== action.model);\n      } else {\n        currentModels.push(action.model);\n      }\n      return {\n        ...state,\n        model: null,\n        model_otto: null,\n        nlp_models: currentModels,\n      };\n    case Actions.TOGGLE_NLP_MODEL_OTTO:\n      let currentModelsOtto = state.nlp_models_otto;\n      if (currentModelsOtto.includes(action.model)) {\n        currentModelsOtto = currentModelsOtto.filter((val) => val !== action.model);\n      } else {\n        currentModelsOtto.push(action.model);\n      }\n      return {\n        ...state,\n        nlp_models_otto: currentModelsOtto,\n      };\n    case Actions.SET_SAMPLE_DATASET:\n      return { ...state, sample_dataset: action.sample_dataset };\n    case Actions.SET_TASK_OTTO:\n      return { ...state, task_otto: action.task };\n    case Actions.SET_DATASET_CATEGORY_OTTO:\n      return { ...state, dataset_category_otto: action.dataset_category };\n    case Actions.SET_MODEL_OTTO:\n      return { ...state, model_otto: action.model };\n    case Actions.SET_SAMPLE_DATASET_OTTO:\n      return { ...state, sample_dataset_otto: action.sample_dataset };\n    // case Actions.CLEAR_PREPROCESSORS_INCLUDING_OTTO:\n    //   return { ...state, preprocessors: [], preprocessors_otto: [] };\n    case Actions.TOGGLE_PREPROCESSOR: {\n      let currentPreprocessors = state.preprocessors;\n      if (currentPreprocessors.includes(action.preprocessor)) {\n        currentPreprocessors = currentPreprocessors.filter(\n          (val) => val !== action.preprocessor\n        );\n      } else {\n        currentPreprocessors.push(action.preprocessor);\n      }\n      return {\n        ...state,\n        preprocessors: currentPreprocessors,\n      };\n    }\n    case Actions.TOGGLE_PREPROCESSOR_OTTO: {\n      let currentPreprocessors = state.preprocessors_otto;\n      if (currentPreprocessors.includes(action.preprocessor)) {\n        currentPreprocessors = currentPreprocessors.filter(\n          (val) => val !== action.preprocessor\n        );\n      } else {\n        currentPreprocessors = currentPreprocessors.push(action.preprocessor);\n      }\n      return {\n        ...state,\n        preprocessors_otto: currentPreprocessors,\n      };\n    }\n    case Actions.STEPPER_HANDLE_NEXT:\n      let nextState = {\n        ...state,\n        stepper_state:\n          NumSteps === getActiveStep()\n            ? NumSteps\n            : StepperStateOrder[getActiveStep() + 1],\n      };\n      if (nextState.stepper_state === StepperState.PREPROCESSORS) {\n        nextState = preprocessorsModifier(nextState);\n      } \n      handleNext(nextState);\n      return nextState;\n    case Actions.STEPPER_HANDLE_PREVIOUS:\n      const prevState = {\n        ...state,\n        stepper_state:\n          StepperStateOrder[StepperStateOrder.indexOf(state.stepper_state) - 1],\n        stepper_finish: false,\n      };\n      return prevState;\n    case Actions.HANDLE_STEPPER_FINISH:\n      return {\n        ...state,\n        stepper_finish: true,\n      };\n    case Actions.HANDLE_RESET:\n      initializeWidget();\n      return InitialState();\n    default:\n      return state;\n  }\n}\n\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchStateContext.Provider value={dispatch}>\n        {children}\n      </DispatchStateContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport const useState = () => ({\n  state: useContext(StateContext),\n  dispatch: useContext(DispatchStateContext),\n});\n","import * as React from \"react\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  thumb: {\n    \"&$open\": {\n      \"& $offset\": {\n        transform: \"scale(1) translateX(5px)\",\n      },\n    },\n  },\n  open: {},\n  offset: {\n    zIndex: 1,\n    ...theme.typography.body2,\n    fontSize: theme.typography.pxToRem(12),\n    lineHeight: 1.2,\n    transition: theme.transitions.create([\"transform\"], {\n      duration: theme.transitions.duration.shortest,\n    }),\n    top: -27,\n    transformOrigin: \"bottom center\",\n    transform: \"scale(0)\",\n    position: \"absolute\",\n  },\n  circle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 21,\n    height: 21,\n    borderRadius: \"50% 50% 50% 0\",\n    backgroundColor: \"currentColor\",\n    transform: \"rotate(-45deg)\",\n  },\n  label: {\n    color: theme.palette.primary.contrastText,\n    transform: \"rotate(45deg)\",\n  },\n});\n\n/**\n * @ignore - internal component.\n */\nfunction ValueLabel(props) {\n  const {\n    children,\n    classes,\n    className,\n    open,\n    value,\n    valueLabelDisplay,\n  } = props;\n\n  if (valueLabelDisplay === \"off\") {\n    return children;\n  }\n\n  return React.cloneElement(\n    children,\n    {\n      className: clsx(\n        children.props.className,\n        {\n          [classes.open]: open || valueLabelDisplay === \"on\",\n        },\n        classes.thumb\n      ),\n    },\n    <span className={clsx(classes.offset, className)}>\n      <span className={classes.circle}>\n        <span className={classes.label}>{value}</span>\n      </span>\n    </span>\n  );\n}\n\nexport default withStyles(styles, { name: \"PrivateValueLabel\" })(ValueLabel);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n  header: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    width: 230,\n    marginTop: -16,\n  },\n  tab: {\n    outline: \"none !important\",\n    // minWidth: \"33%\",\n  },\n  actionTitles: {\n    marginBottom: 4,\n  },\n  floatLeft: {\n    float: \"left\",\n    fontWeight: 300,\n    fontSize: 20,\n  },\n  floatRight: {\n    float: \"right\",\n    color: \"#3f51b5\",\n    fontWeight: 400,\n    fontSize: 16,\n    marginTop: 4,\n  },\n  actionWidth: {\n    width: 260,\n  },\n  sliderWidth: {\n    width: 200,\n  },\n  layerInputItem: {\n    marginBottom: 8,\n    marginTop: -16,\n  },\n  layerInput: {\n    width: 60,\n    height: 36,\n    borderRadius: \"4px !important\",\n    textAlign: \"center\",\n  },\n  nodesLabel: {\n    marginRight: 8,\n  },\n  nodesItem: {\n    marginTop: 24,\n    marginBottom: -8,\n  },\n  actionItem: {\n    marginTop: 16,\n  },\n  button: {\n    width: 260,\n    outline: \"none !important\",\n  },\n  marginTOP: {\n    marginTop: 8,\n  },\n}));\n","import React from \"react\";\n\nimport ValueLabelDisplay from \"components/toolbox/ValueLabelDisplay\";\nimport { Layer } from \"nn-architecture/Layer\";\nimport {\n  Tabs,\n  Tab,\n  Box,\n  AppBar,\n  useTheme,\n  Grid,\n  Button,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Typography,\n  Slider,\n} from \"@material-ui/core\";\nimport { Activations, Initializers } from \"nn-architecture/hyperparams\";\nimport { useStyles } from \"styles/NNFFToolboxStyles\";\nimport { NNActions } from \"state/NNActions\";\nimport { useNNState } from \"state/NNState\";\n\nconst onNodesChanged = (layerIndex, units, nn_dispatch) => {\n  nn_dispatch({\n    type: NNActions.SET_NODES,\n    layer: layerIndex,\n    nodes: units,\n  });\n};\n\nconst onLayerRemove = (layerIndex, nn_dispatch) => {\n  nn_dispatch({\n    type: NNActions.REMOVE_LAYER,\n    layer: layerIndex,\n  });\n};\n\nconst onLayerAdd = (nn_dispatch) => {\n  nn_dispatch({\n    type: NNActions.ADD_LAYER,\n  });\n};\n\nconst onLayerActivationChange = (event, layerIndex, nn_dispatch) => {\n  nn_dispatch({\n    type: NNActions.SET_LAYER_ACTIVATION,\n    layer: layerIndex,\n    activation: event.target.value,\n  });\n};\n\nconst onLayerInitializerChange = (event, layerIndex, nn_dispatch) => {\n  nn_dispatch({\n    type: NNActions.SET_LAYER_INITIALIZER,\n    layer: layerIndex,\n    initializer: event.target.value,\n  });\n};\n\nfunction LayerOption({ layer, layerIndex, nn_dispatch }) {\n  const classes = useStyles();\n  if (layer == null) {\n    return null;\n  }\n  return (\n    <Grid className={classes.layerInputItem} item>\n      {/* <Grid style={{ \"margin-top\": \"28px\" }} item>\n          <Divider />\n        </Grid> */}\n      <Grid item>\n        <Grid direction=\"row\" className={classes.nodesItem} container>\n          <Grid item>\n            <Typography className={classes.nodesLabel} gutterBottom>\n              Nodes\n            </Typography>\n          </Grid>\n          <Grid className={classes.sliderWidth} item>\n            <Slider\n              value={layer.units}\n              valueLabelDisplay=\"on\"\n              ValueLabelComponent={ValueLabelDisplay}\n              step={1}\n              marks\n              min={1}\n              max={10}\n              onChange={(event, units) =>\n                onNodesChanged(layerIndex, units, nn_dispatch)\n              }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item className={classes.actionItem}>\n        <FormControl className={classes.actionWidth}>\n          <InputLabel>Activation Function</InputLabel>\n          <Select\n            value={layer.activation}\n            onChange={(event) =>\n              onLayerActivationChange(event, layerIndex, nn_dispatch)\n            }\n          >\n            {Object.keys(Activations).map((key) => (\n              <MenuItem value={Activations[key]}>{Activations[key]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item className={classes.actionItem}>\n        <FormControl className={classes.actionWidth}>\n          <InputLabel>Weight Initializer</InputLabel>\n          <Select\n            value={layer.initializer}\n            onChange={(event) =>\n              onLayerInitializerChange(event, layerIndex, nn_dispatch)\n            }\n          >\n            {Object.keys(Initializers).map((key) => (\n              <MenuItem value={Initializers[key]}>{Initializers[key]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default function NNFFBuildPanelDetails() {\n  const classes = useStyles();\n  const { nn_state, nn_dispatch } = useNNState();\n\n  return (\n    <Grid container direction=\"column\">\n      <LayerOption\n        layer={nn_state.layers[nn_state.selectedLayerIndex]}\n        layerIndex={nn_state.selectedLayerIndex}\n        nn_dispatch={nn_dispatch}\n      />\n      <Grid className={classes.actionItem} item>\n        <Button\n          disabled={nn_state.layers.length === 1}\n          color=\"secondary\"\n          className={classes.button}\n          variant=\"outlined\"\n          onClick={() =>\n            onLayerRemove(nn_state.selectedLayerIndex, nn_dispatch)\n          }\n        >\n          Remove layer {nn_state.selectedLayerIndex + 1}\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"primary\"\n          className={`${classes.button} ${classes.marginTOP}`}\n          variant=\"outlined\"\n          onClick={() => onLayerAdd(nn_dispatch)}\n        >\n          Add Hidden Layer\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { useEffect } from \"react\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ValueLabelDisplay from \"components/toolbox/ValueLabelDisplay\";\nimport { Layer } from \"nn-architecture/Layer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Tabs,\n  Tab,\n  Box,\n  AppBar,\n  useTheme,\n  Grid,\n  Button,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Slider,\n} from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport { useState } from \"state/State\";\nimport { StepperState, StateType, Models } from \"state/StateTypes\";\nimport { useNNState } from \"state/NNState\";\nimport { NNActions } from \"state/NNActions\";\nimport NNFFBuildPanelDetails from \"./NNFFBuildPanelDetails\";\nimport { useStyles } from \"styles/NNFFToolboxStyles\";\n\nconst tabLabels = [\"Build\", \"Learn\", \"Train\"];\n\nexport default function NNFFToolbox() {\n  const classes = useStyles();\n  const { state, dispatch } = useState();\n  const { nn_state } = useNNState();\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Grid container className={classes.header} direction=\"row\">\n            <Grid item>\n              <Typography variant=\"h5\" className={classes.floatLeft}>\n                Build\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h6\" className={classes.floatRight}>\n                Layer {nn_state.selectedLayerIndex + 1} of{\" \"}\n                {nn_state.layers.length}\n              </Typography>\n            </Grid>\n          </Grid>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <NNFFBuildPanelDetails />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n\nimport ValueLabelDisplay from \"components/toolbox/ValueLabelDisplay\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  Grid,\n  Slider,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n} from \"@material-ui/core\";\n\nimport { ModelActionType, ModelActions } from \"state/ModelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useModelState } from \"state/ModelState\";\nimport { model } from \"codegen/knnCode\";\n\nexport const useStyles = makeStyles((theme) => ({\n  sliderWidth: {\n    width: 200,\n  },\n  nodesLabel: {\n    marginRight: 8,\n  },\n  nodesItem: {\n    marginTop: 0,\n    marginBottom: 8,\n  },\n  actionItem: {\n    marginBottom: 16,\n  },\n  actionWidth: {\n    width: 260,\n  },\n  button: {\n    width: 260,\n    marginBottom: 8,\n    outline: \"none !important\",\n  },\n}));\n\nexport default function KNNToolbox() {\n  const classes = useStyles();\n  const { model_state, model_dispatch } = useModelState();\n  const [kVal, setKVal] = useState(model_state.knn_k);\n  const [col1, setCol1] = useState(model_state.knn_column1_index);\n  const [col2, setCol2] = useState(model_state.knn_column2_index);\n\n  function onUpdatePlot() {\n    model_dispatch({\n      type: ModelActions.SET_KNN_COLS,\n      indices: [col1, col2],\n    });\n    if (kVal !== model_state.knn_k) {\n      model_dispatch({\n        type: ModelActions.SET_KNN_K,\n        knn_k: kVal,\n      });\n      model_dispatch({\n        type: ModelActions.RUN_KNN,\n        dispatch: model_dispatch,\n      });\n    }\n  }\n\n  return (\n    <ExpansionPanel defaultExpanded>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"h5\">Plot</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid direction=\"column\" container>\n          {/* K Value */}\n          <Grid item>\n            <Grid direction=\"row\" className={classes.nodesItem} container>\n              <Grid item>\n                <Typography className={classes.nodesLabel} gutterBottom>\n                  K\n                </Typography>\n              </Grid>\n              <Grid className={classes.sliderWidth} item>\n                <Slider\n                  value={kVal}\n                  valueLabelDisplay=\"on\"\n                  ValueLabelComponent={ValueLabelDisplay}\n                  step={1}\n                  marks\n                  min={1}\n                  max={20}\n                  onChange={(event, val) => setKVal(val)}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          {/* Column 1 */}\n          <Grid item className={classes.actionItem}>\n            <FormControl className={classes.actionWidth}>\n              <InputLabel id=\"demo-simple-select-label\">X-Axis</InputLabel>\n              <Select\n                value={model_state.knn_columns.length > 0 ? col1 : \"\"}\n                onChange={(event) => setCol1(event.target.value)}\n              >\n                {model_state.knn_columns.map((column, index) => (\n                  <MenuItem key={index} value={index}>\n                    {model_state.knn_columns_map[column]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          {/* Column 2 */}\n          <Grid item className={classes.actionItem}>\n            <FormControl className={classes.actionWidth}>\n              <InputLabel id=\"demo-simple-select-label\">Y-Axis</InputLabel>\n              <Select\n                value={model_state.knn_columns.length > 0 ? col2 : \"\"}\n                onChange={(event) => setCol2(event.target.value)}\n              >\n                {model_state.knn_columns.map((column, index) => (\n                  <MenuItem key={index} value={index}>\n                    {model_state.knn_columns_map[column]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <Button\n              color=\"primary\"\n              className={classes.button}\n              variant=\"outlined\"\n              onClick={onUpdatePlot}\n            >\n              {model_state.knn_k !== kVal ? \"Re-Train Model\" : \"Update Plot\"}\n            </Button>\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n","import React from \"react\";\n\nimport ValueLabelDisplay from \"components/toolbox/ValueLabelDisplay\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  Grid,\n  Slider,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n  Paper,\n  Chip,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { SampleDataset, StateType } from \"state/StateTypes\";\nimport { datasetMetadata } from \"static/datasets/metadata\";\nimport { useState } from \"state/State\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(0.5),\n    marginTop: -12,\n    border: \"none\",\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  table: {\n    maxWidth: 350,\n  },\n  noPadding: {\n    padding: 0,\n  },\n}));\n\nconst chipData = (state: StateType) => {\n  const metadata = datasetMetadata[state.sample_dataset];\n  const chips = [\"Instances: \" + String(metadata.instances)];\n  if (metadata.attributes) {\n    chips.push(\"Attributes: \" + String(metadata.attributes));\n  }\n  if (metadata.classes) {\n    chips.push(\"Classes: \" + String(metadata.classes));\n  }\n  chips.push(...metadata.tags);\n  return chips;\n};\n\nexport default function DataPreview() {\n  const { state } = useState();\n  const classes = useStyles();\n\n  if (state.sample_dataset == null) {\n    return null;\n  }\n  const metadata = datasetMetadata[state.sample_dataset];\n\n  function getFormatted(label, index) {\n    if (metadata.units) {\n      return label + \" (\" + metadata.units[index] + \")\";\n    }\n    return label;\n  }\n\n  return (\n    <ExpansionPanel defaultExpanded>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"h5\">\n          {datasetMetadata[state.sample_dataset].title}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.noPadding}>\n        <Grid direction=\"column\" container className={classes.noPadding}>\n          {/* Data Attributes */}\n          <Grid item>\n            <div className={classes.root}>\n              {chipData(state).map((data, index) => {\n                return (\n                  <li key={index}>\n                    <Chip\n                      label={data}\n                      color=\"primary\"\n                      className={classes.chip}\n                    />\n                  </li>\n                );\n              })}\n            </div>\n          </Grid>\n          {/* Table */}\n          <Grid item className={classes.actionItem}>\n            <TableContainer component={Paper}>\n              <Table\n                className={classes.table}\n                size=\"small\"\n                aria-label=\"a dense table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    {metadata.columns.map((column, index) => (\n                      <TableCell>\n                        {getFormatted(metadata.columnsMap[column], index)}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {metadata.data.slice(0, 5).map((row, index) => (\n                    <TableRow key={index}>\n                      {metadata.columns.map((column) => (\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row[column]}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardContent, Grow } from \"@material-ui/core\";\nimport { useState } from \"state/State\";\nimport {\n  StepperState,\n  StateType,\n  Models,\n  DatasetCategory,\n} from \"state/StateTypes\";\nimport NNFFToolbox from \"components/toolbox/NNFFToolbox\";\nimport KNNToolbox from \"components/toolbox/KNNToolbox\";\nimport DataPreview from \"components/toolbox/DataPreview\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 296,\n  },\n  dataRoot: {\n    width: 350,\n  },\n  headerText: {\n    paddingLeft: theme.spacing(0),\n    paddingTop: theme.spacing(7),\n    paddingBottom: theme.spacing(1),\n    fontWeight: \"600\",\n  },\n  card: {\n    marginTop: \"4px\",\n    height: \"100%\",\n    border: \"none\",\n  },\n  cardContent: {\n    padding: 2,\n  },\n}));\n\nconst getToolboxContent = (state: StateType) => {\n  if (state.stepper_state === StepperState.VISUALIZE) {\n    switch (state.model) {\n      case Models.LINEAR_REGRESSION:\n        return <div>TODO</div>;\n      case Models.NEURAL_NETWORK_FF:\n        return <NNFFToolbox />;\n      case Models.KNN:\n        return <KNNToolbox />;\n      default:\n        return null;\n    }\n  }\n  return <DataPreview />;\n};\n\nexport default function ToolboxContainer() {\n  const classes = useStyles();\n  const { state } = useState();\n  return (\n    <Grow\n      in={\n        state.stepper_state === StepperState.VISUALIZE ||\n        (state.dataset_category === DatasetCategory.SAMPLE &&\n          state.sample_dataset != null)\n      }\n    >\n      <div\n        className={\n          state.stepper_state === StepperState.VISUALIZE\n            ? classes.root\n            : classes.dataRoot\n        }\n      >\n        <Typography className={classes.headerText} variant=\"h5\">\n          {state.stepper_state === StepperState.VISUALIZE\n            ? \"Toolbox\"\n            : \"Dataset Preview\"}\n        </Typography>\n        <Card className={classes.card} variant=\"outlined\">\n          <CardContent className={classes.cardContent}>\n            {getToolboxContent(state)}\n          </CardContent>\n        </Card>\n      </div>\n    </Grow>\n  );\n}\n","import React from \"react\";\nimport \"App.css\";\nimport { Row } from \"react-bootstrap\";\nimport ToolboxContainer from \"containers/ToolboxContainer.react\";\n\nfunction RightColumnContainer() {\n  return (\n    <Row className=\"toolboxContainer\">\n      <ToolboxContainer />\n    </Row>\n  );\n}\n\nexport default RightColumnContainer;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useState } from \"state/State\";\nimport { Actions } from \"state/Actions\";\nimport { SampleDataset, StateType } from \"state/StateTypes\";\nimport { datasetMetadata } from \"static/datasets/metadata\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginLeft: 8,\n    marginRight: 8,\n    marginTop: 8,\n  },\n  buttonInner: {\n    width: \"100%\",\n    outline: \"none!important\",\n  },\n  //   subtext: {\n  //     color: \"white\",\n  //   },\n}));\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary, & .MuiListItemText-secondary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\n// TODO: Conditionally return datasets\nconst getSampleDatasets = (state: StateType) => {\n  return [SampleDataset.IRIS, SampleDataset.BOSTON, SampleDataset.TWITTER];\n};\n\nexport default function SampleDatasetMenu({ anchorEl, handleClose, id }) {\n  const { state, dispatch } = useState();\n  const classes = useStyles();\n  let style, selectedDataset;\n  if (anchorEl != null) {\n    const rect = anchorEl.getBoundingClientRect();\n    style = {\n      transform: `translate(${rect.left - 80}px, ${\n        rect.top + rect.height + 40\n      }px)`,\n    };\n  }\n\n  function handleItemClick(dataset) {\n    console.log(\"huh\", dataset);\n    selectedDataset = dataset;\n  }\n\n  function handleConfirm() {\n    handleClose();\n    if (selectedDataset != null) {\n      dispatch({\n        type: Actions.SET_SAMPLE_DATASET,\n        sample_dataset: selectedDataset,\n      });\n    }\n  }\n\n  return (\n    <StyledMenu\n      id={id}\n      keepMounted\n      anchorEl={anchorEl}\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n      style={style}\n    >\n      {getSampleDatasets(state).map((dataset) => (\n        <StyledMenuItem\n          selected={state.sample_dataset === dataset}\n          onClick={() => handleItemClick(dataset)}\n        >\n          <ListItemIcon>{datasetMetadata[dataset].icon}</ListItemIcon>\n          <ListItemText\n            primary={datasetMetadata[dataset].title}\n            secondary={\n              <div className={classes.subtext}>\n                {datasetMetadata[dataset].subtitle}\n              </div>\n            }\n          />\n        </StyledMenuItem>\n      ))}\n      <div className={classes.button}>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          className={classes.buttonInner}\n          onClick={handleConfirm}\n        >\n          Confirm\n        </Button>\n      </div>\n    </StyledMenu>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Avatar, Badge, Tooltip, Typography } from \"@material-ui/core\";\n\nimport { invoke } from \"js-ml/knn\";\n\nimport {\n  StepperStateType,\n  StepperState,\n  Tasks,\n  Models,\n  DatasetCategory,\n  TaskToModelsMap,\n  StateType,\n  Preprocessors,\n} from \"state/StateTypes\";\nimport { useState } from \"state/State\";\nimport { Actions } from \"state/Actions\";\nimport logo from \"logo.svg\";\nimport SampleDatasetMenu from \"components/SampleDatasetMenu\";\nimport { datasetMetadata } from \"static/datasets/metadata\";\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    width: 10,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n\nconst useStyles = makeStyles((theme) => ({\n  titleInner: {\n    fontSize: 42,\n    fontWeight: 300,\n    marginTop: 8,\n  },\n  subtitle: {\n    marginTop: 20,\n    marginBottom: 72,\n    fontWeight: 300,\n  },\n  large: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n  },\n  avatarItem: {\n    textAlign: \"-webkit-center\",\n    width: 188,\n  },\n  avatarItemSelected: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    boxShadow:\n      \"0px 5px 5px -3px rgba(0,0,0,0.2), 0px 0px 6px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\",\n    border: \"solid 1px #3f51b5\",\n  },\n  avatarLabel: {\n    marginTop: 20,\n  },\n  avatarLabelSelected: {\n    marginTop: 20,\n    fontWeight: 500,\n  },\n  recommend: {\n    width: 30,\n  },\n  button: {\n    marginBottom: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport function getOptions(state: StateType) {\n  const options = [];\n  const stepperState = state.stepper_state;\n  switch (stepperState) {\n    case StepperState.TASK:\n      Object.keys(Tasks).map((key) =>\n        options.push({\n          label: Tasks[key],\n          type: StepperState.TASK,\n        })\n      );\n      return options;\n    case StepperState.DATASET:\n      Object.keys(DatasetCategory).map((key) =>\n        options.push({\n          label: DatasetCategory[key],\n          type: StepperState.DATASET,\n        })\n      );\n      return options;\n    case StepperState.MODEL:\n      Object.keys(TaskToModelsMap(state.task)).map((key) =>\n        options.push({\n          label: Models[key],\n          type: StepperState.MODEL,\n        })\n      );\n      return options;\n    case StepperState.PREPROCESSORS:\n      Object.keys(Preprocessors).map((key) =>\n        options.push({\n          label: Preprocessors[key],\n          type: StepperState.PREPROCESSORS,\n        })\n      );\n      return options;\n    default:\n      return options;\n  }\n}\n\nexport default function VisualizerOptionSelectionGrid() {\n  const classes = useStyles();\n  const { state, dispatch } = useState();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClick = (event, type, label) => {\n    if (type === StepperState.DATASET && label === DatasetCategory.SAMPLE) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const getIsRecommended = (value) =>\n    [\n      state.task_otto,\n      state.dataset_category_otto,\n      state.sample_dataset_otto,\n      state.model_otto,\n      ...state.nlp_models_otto,\n      ...state.preprocessors_otto,\n    ].includes(value);\n\n  const getIsSelected = (value) =>\n    [\n      state.task,\n      state.dataset_category,\n      state.sample_dataset,\n      state.model,\n      ...state.nlp_models,\n      ...state.preprocessors,\n    ].includes(value);\n\n  const optionOnClickHandler = (type: StepperStateType, value) => {\n    switch (type) {\n      case StepperState.TASK:\n        dispatch({\n          type: Actions.SET_TASK,\n          task: value,\n        });\n        break;\n      case StepperState.DATASET:\n        dispatch({\n          type: Actions.SET_DATASET_CATEGORY,\n          dataset_category: value,\n        });\n        break;\n      case StepperState.MODEL:\n        if (state.task === Tasks.NATURAL_LANGUAGE) {\n          dispatch({\n            type: Actions.TOGGLE_NLP_MODEL,\n            model: value,\n          });\n        } else {\n          dispatch({\n            type: Actions.SET_MODEL,\n            model: value,\n          });\n        }\n        break;\n      case StepperState.PREPROCESSORS:\n        dispatch({\n          type: Actions.TOGGLE_PREPROCESSOR,\n          preprocessor: value,\n        });\n        break;\n      default:\n    }\n  };\n\n  function formatLabel(label) {\n    if (label === DatasetCategory.SAMPLE) {\n      if (state.sample_dataset != null) {\n        return label + \" (\" + datasetMetadata[state.sample_dataset].title + \")\";\n      }\n    }\n    return label;\n  }\n\n  function AvatarItem(props: { avatar: any }) {\n    const avatar = props.avatar;\n    return (\n      <>\n        <Avatar\n          aria-controls={avatar.label}\n          alt={avatar.label}\n          src={logo}\n          className={\n            getIsSelected(avatar.label)\n              ? classes.avatarItemSelected\n              : classes.large\n          }\n          key={avatar.label}\n          onClick={(event) => {\n            optionOnClickHandler(avatar.type, avatar.label);\n            handleClick(event, avatar.type, avatar.label);\n            console.log(\n              \"target\",\n              event.currentTarget,\n              event.relatedTarget,\n              event.target\n            );\n          }}\n          aria-haspopup=\"true\"\n        />\n        <SampleDatasetMenu\n          anchorEl={anchorEl}\n          handleClose={handleClose}\n          id={avatar.label}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Typography className={classes.titleInner} color=\"textPrimary\">\n        Let's get started!\n      </Typography>\n      <Typography variant=\"h6\" className={classes.subtitle}>\n        Chat with Otto to get a {state.stepper_state} recommendation.\n      </Typography>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={5}\n      >\n        {getOptions(state).map((avatar) => (\n          <Grid item className={classes.avatarItem}>\n            {getIsRecommended(avatar.label) ? (\n              <Tooltip title=\"Recommended by Otto!\" placement=\"top\">\n                <StyledBadge\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  badgeContent={\n                    <img\n                      className={classes.recommend}\n                      src=\"https://img.icons8.com/ultraviolet/80/000000/good-quality.png\"\n                      alt=\"R\"\n                    />\n                  }\n                >\n                  <AvatarItem avatar={avatar} />\n                </StyledBadge>\n              </Tooltip>\n            ) : (\n              <AvatarItem avatar={avatar} />\n            )}\n            <Typography\n              color=\"textPrimary\"\n              className={\n                getIsSelected(avatar.label)\n                  ? classes.avatarLabelSelected\n                  : classes.avatarLabel\n              }\n            >\n              {formatLabel(avatar.label)}\n            </Typography>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card } from \"@material-ui/core\";\nimport { useState } from \"state/State\";\nimport { StepperStateOrder, StateType } from \"state/StateTypes\";\nimport { Actions } from \"state/Actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"80%\",\n    marginLeft: 110,\n  },\n  stepLabel: {\n    fontSize: 19,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  headerText: {\n    paddingLeft: theme.spacing(0),\n    paddingTop: theme.spacing(7),\n    paddingBottom: theme.spacing(1),\n    fontWeight: \"600\",\n  },\n  card: {\n    marginTop: \"4px\",\n  },\n  optionLabel: {\n    marginLeft: 12,\n    borderLeft: \"1px solid #bdbdbd\",\n    paddingLeft: 12,\n    height: 32,\n    paddingTop: 4,\n  },\n}));\n\nexport function getSteps() {\n  return [\"Task\", \"Dataset\", \"Model\", \"Preprocessors\", \"Visualize\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return \"Identify the machine learning task that describes your goal\";\n    case 1:\n      return \"Choose from provided datasets, or use your own\";\n    case 2:\n      return \"Select the model best equipped to unlock insights from your data\";\n    case 3:\n      return \"Optimize your data for machine learning\";\n    case 4:\n      return \"Fine tune and visualize your model\";\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport const getActiveStep = (state: StateType) =>\n  state.stepper_finish\n    ? StepperStateOrder.length\n    : StepperStateOrder.indexOf(state.stepper_state);\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const { state, dispatch } = useState();\n  const steps = getSteps();\n\n  const SelectedOptionLabel = (props: { index: number }) => {\n    let option = null;\n    switch (props.index) {\n      case 0:\n        option = state.task;\n        break;\n      case 1:\n        option = state.dataset_category;\n        break;\n      case 2:\n        option = state.model;\n        break;\n      case 3:\n        option = state.preprocessors.join(\", \");\n        break;\n      default:\n        break;\n    }\n    if (option == null || getActiveStep(state) <= props.index) {\n      return null;\n    }\n    return <Typography className={classes.optionLabel}>{option}</Typography>;\n  };\n\n  const handleReset = () => {\n    dispatch({\n      type: Actions.HANDLE_RESET,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography className={classes.headerText} variant=\"h5\">\n        Pipeline Architecture\n      </Typography>\n      <Card className={classes.card} variant=\"outlined\">\n        <Stepper activeStep={getActiveStep(state)} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>\n                {<Typography variant=\"h6\">{label}</Typography>}\n              </StepLabel>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n              </StepContent>\n              <SelectedOptionLabel index={index} />\n            </Step>\n          ))}\n        </Stepper>\n      </Card>\n      {getActiveStep(state) === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  CardContent,\n  CardActions,\n  Typography,\n  Card,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  NavigateNextRounded,\n  NavigateBeforeRounded,\n} from \"@material-ui/icons/\";\n\nimport { useState } from \"state/State\";\nimport VisualizerOptionSelectionGrid from \"components/VisualizerOptionSelectionGrid\";\nimport { getOptions } from \"components/VisualizerOptionSelectionGrid\";\nimport { getActiveStep, getSteps } from \"containers/SummaryContainer\";\nimport { StepperState, Models, Tasks, DatasetCategory } from \"state/StateTypes\";\nimport { Actions } from \"state/Actions\";\nimport PlotsContainer from \"./PlotsContainer\";\nimport { useModelState } from \"state/ModelState\";\nimport { ModelActions } from \"state/ModelActions\";\nimport { invokeNLP } from \"js-ml/nlp\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootExplanation: {\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingTop: theme.spacing(1),\n    boxShadow: \"none\",\n    height: 100,\n  },\n  rootActions: {\n    width: \"100%\",\n    height: \"100%\",\n    textAlign: \"center\",\n    paddingTop: theme.spacing(1),\n    position: \"relative\",\n  },\n  title: {\n    fontSize: \"2vw\",\n    fontWeight: 300,\n    marginTop: -5,\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  fullHeight: {\n    height: \"100%\",\n  },\n  visualizerHeight: {\n    height: \"calc(100% - 100px)\",\n  },\n}));\n\nfunction VisualizerContainer() {\n  const classes = useStyles();\n  const steps = getSteps();\n  const { state, dispatch } = useState();\n  const { model_dispatch } = useModelState();\n\n  const getIsSelected = (value) =>\n    [\n      state.task,\n      state.dataset_category,\n      state.sample_dataset,\n      state.model,\n      ...state.nlp_models,\n      ...state.preprocessors,\n    ].includes(value);\n\n  const handleNext = async () => {\n    dispatch({\n      type: Actions.STEPPER_HANDLE_NEXT,\n    });\n    if (state.stepper_state === StepperState.PREPROCESSORS) {\n      if (state.model === Models.KNN) {\n        model_dispatch({\n          type: ModelActions.RUN_KNN,\n          dispatch: model_dispatch,\n        });\n      } else if (state.task === Tasks.NATURAL_LANGUAGE) {\n        // model_dispatch({\n        //   type: ModelActions.RUN_NLP,\n        //   doEntity: state.nlp_models.includes(Models.ENTITY_RECOGNITION),\n        //   doSentiment: state.nlp_models.includes(Models.SENTIMENT_ANALYSIS),\n        //   dispatch: model_dispatch,\n        // });\n        model_dispatch({\n          type: ModelActions.RUNNING,\n        })\n        await invokeNLP(true, true);\n      }\n    }\n    \n  };\n\n  const handleBack = () => {\n    dispatch({\n      type: Actions.STEPPER_HANDLE_PREVIOUS,\n    });\n  };\n\n  const handleFinish = () => {\n    dispatch({\n      type: Actions.HANDLE_STEPPER_FINISH,\n    });\n  };\n\n  function isNextDisabled() {\n    if (\n      state.stepper_state === StepperState.DATASET &&\n      state.dataset_category === DatasetCategory.SAMPLE &&\n      state.sample_dataset == null\n    ) {\n      return true;\n    }\n    return (\n      state.stepper_state !== StepperState.PREPROCESSORS &&\n      !getOptions(state).some((val) => getIsSelected(val.label))\n    );\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      className={classes.fullHeight}\n    >\n      <Grid item className={classes.fullWidth}>\n        <Card className={classes.rootExplanation}>\n          <CardContent>\n            <Typography className={classes.title} color=\"primary\">\n              Build a machine learning pipeline with Otto\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid className={`${classes.fullWidth} ${classes.visualizerHeight}`} item>\n        <Card className={classes.rootActions} variant=\"outlined\">\n          <CardContent className={classes.fullHeight}>\n            {state.stepper_state === StepperState.VISUALIZE ? (\n              <PlotsContainer />\n            ) : (\n              <VisualizerOptionSelectionGrid />\n            )}\n          </CardContent>\n          <CardActions\n            style={{\n              position: \"absolute\",\n              bottom: \"2px\",\n              display: \"inline-block\",\n              width: \"100%\",\n              left: 0,\n            }}\n          >\n            {getActiveStep(state) > 0 ? (\n              <Button\n                onClick={handleBack}\n                className={classes.button}\n                style={{ float: \"left\" }}\n                startIcon={<NavigateBeforeRounded />}\n              >\n                {steps[getActiveStep(state) - 1]}\n              </Button>\n            ) : null}\n            <Button\n              disabled={isNextDisabled()}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={\n                getActiveStep(state) === steps.length - 1\n                  ? handleFinish\n                  : handleNext\n              }\n              className={classes.button}\n              style={{ float: \"right\" }}\n              endIcon={<NavigateNextRounded />}\n            >\n              {getActiveStep(state) === steps.length - 1\n                ? \"Finish\"\n                : steps[getActiveStep(state) + 1]}\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default VisualizerContainer;\n","import { Layers } from \"nn-architecture/hyperparams\";\nconst StringBuilder = require(\"string-builder\");\n\nexport const model = (state) => {\n  const sb = new StringBuilder();\n\n  sb.appendLine(\"model = Sequential()\");\n  sb.append(layerCode(state));\n\n  sb.appendLine(\n    `model.compile(optimizer='${state.optimizer}', loss='${state.loss}')`\n  );\n\n  sb.appendLine(\"model.fit(X_train, y_train, batch_size=32, epochs=100)\");\n\n  return sb.toString();\n};\n\nconst layerCode = (state) => {\n  const sb = new StringBuilder();\n  const layers = state.layers;\n  for (let i = 0; i < layers.length; i++) {\n    const layer = layers[i];\n    sb.appendLine(i === 0 ? inputLayerCode(layer) : hiddenAndOutputLayerCode(layer));\n  }\n  return sb.toString();\n};\n\nconst inputLayerCode = (layer) => {\n  const units = layer.units;\n  const str = `model.add(Input(shape=(${units},)))`;\n  return str;\n};\n\nconst hiddenAndOutputLayerCode = (layer) => {\n  const units = layer.units;\n  const activation = layer.activation;\n  const initializer = layer.initializer;\n  const str = `model.add(Dense(${units}, activation='${activation}', kernel_initializer='${initializer}'))`;\n  return str;\n};\n","import * as importsCode from \"codegen/importsCode\";\nimport * as regressionCode from \"codegen/regressionCode\";\nimport * as knnCode from \"codegen/knnCode\";\nimport * as sharedCode from \"codegen/sharedCode\";\nimport * as preprocessCode from \"codegen/preprocessCode\";\nimport { Models, DatasetCategory, Preprocessors, Tasks } from \"state/StateTypes\";\nimport * as networkCode from \"codegen/networkCode\";\nimport * as nlpCode from \"codegen/nlpCode\";\nconst StringBuilder = require(\"string-builder\");\n\nexport const CodeGen = (state, nn_state) => {\n  const sb = new StringBuilder();\n\n  // task-based imports\n  if (state.task === Tasks.NATURAL_LANGUAGE) {\n    sb.appendLine(importsCode.nlp());\n  } else {\n    sb.appendLine(importsCode.supervised());\n  }\n\n  // model-specific imports\n  switch (state.model) {\n    case Models.KNN:\n      sb.appendLine(importsCode.knn());\n      break;\n    case Models.NEURAL_NETWORK_FF:\n      sb.appendLine(importsCode.nn());\n      break;\n    case Models.LINEAR_REGRESSION:\n      sb.appendLine(importsCode.linear());\n      break;\n    case Models.ORDINAL_REGRESSION:\n      sb.appendLine(importsCode.ordinal());\n      break;\n    case Models.POISSON_REGRESSION:\n      sb.appendLine(importsCode.poisson());\n      break;\n  }\n\n  // preprocessor imports\n  if (state.preprocessors.includes(Preprocessors.NORMALIZATION)) {\n    sb.appendLine(importsCode.normalization());\n  }\n  if (state.preprocessors.includes(Preprocessors.PCA)) {\n    sb.appendLine(importsCode.pca());\n  }\n  if (state.preprocessors.includes(Preprocessors.TEXT_CLEANING)) {\n    sb.appendLine(importsCode.textCleaning());\n  }\n\n  // import sklearn datasets\n  if (state.dataset_category === DatasetCategory.SAMPLE && state.task !== Tasks.NATURAL_LANGUAGE) {\n    sb.appendLine(importsCode.sklearnDatasets());\n  }\n\n  // defines loadData function\n  if (state.dataset_category === DatasetCategory.SAMPLE) {\n    if (state.task === Tasks.NATURAL_LANGUAGE) {\n      sb.appendLine(sharedCode.defineLoadDatasetNLP()); // FIXME: names of datasets\n    } else {\n      sb.appendLine(sharedCode.defineLoadDataset()); // FIXME: names of datasets\n    }\n  } else {\n    sb.appendLine(sharedCode.defineLoadUnspecified());\n  }\n\n  // defines params\n  sb.appendLine(params(state));\n\n  // loads data\n  if (state.task === Tasks.NATURAL_LANGUAGE) {\n    sb.appendLine(sharedCode.loadNLP());\n  } else {\n    sb.appendLine(sharedCode.load());\n  }\n\n  // scales data\n  if (state.preprocessors.includes(Preprocessors.NORMALIZATION)) {\n    sb.appendLine(preprocessCode.normalization());\n  }\n\n  // slices data (feature selection OR pca)\n  sb.appendLine(sliceData(state));\n\n  // splits training/testing sets\n  if (state.task !== Tasks.NATURAL_LANGUAGE) {\n    sb.appendLine(sharedCode.split());\n  }\n\n  // cleans text data\n  if (state.preprocessors.includes(Preprocessors.TEXT_CLEANING)) {\n    sb.appendLine(preprocessCode.textCleaning());\n  }\n\n  // fits model\n  if (state.task === Tasks.NATURAL_LANGUAGE && state.nlp_models.length > 0) {\n    const doEntity = state.nlp_models.includes(Models.ENTITY_RECOGNITION);\n    const doSentiment = state.nlp_models.includes(Models.SENTIMENT_ANALYSIS);\n    sb.appendLine(nlpCode.modelNLP(doEntity, doSentiment));\n  }\n\n  switch (state.model) {\n    case Models.KNN:\n      sb.appendLine(knnCode.model());\n      break;\n    case Models.NEURAL_NETWORK_FF:\n      sb.appendLine(networkCode.model(nn_state));\n      break;\n    case Models.LINEAR_REGRESSION:\n      sb.appendLine(regressionCode.modelLinear());\n      break;\n    case Models.ORDINAL_REGRESSION:\n      sb.appendLine(regressionCode.modelOrdinal());\n      break;\n    case Models.POISSON_REGRESSION:\n      sb.appendLine(regressionCode.modelPoisson());\n      break;\n  }\n\n  return sb.toString().trim();\n};\n\nconst componentsForModel = (model) => {\n  switch (model) {\n    case Models.KNN:\n      return 2;\n    case Models.NEURAL_NETWORK_FF:\n      return \"None\";\n    case Models.ORDINAL_REGRESSION:\n    case Models.POISSON_REGRESSION:\n    case Models.LINEAR_REGRESSION:\n      return 1;\n  }\n};\n\nconst params = (state) => {\n  if (state.preprocessors.includes(Preprocessors.PCA)) {\n    const components = componentsForModel(state.model);\n    return preprocessCode.paramsPca(components);\n  }\n\n  if (state.task === Tasks.NATURAL_LANGUAGE && state.nlp_models.length > 0) {\n    return nlpCode.params(1); // FIXME: replace with feature column\n  }\n\n  switch (state.model) {\n    case Models.KNN:\n      return knnCode.params(7); // FIXME: replace with number of neighbors\n    case Models.LINEAR_REGRESSION:\n      return regressionCode.params(5); // FIXME: replace with feature column\n  }\n};\n\nconst sliceData = (state) => {\n  if (state.preprocessors.includes(Preprocessors.PCA)) {\n    return preprocessCode.pca();\n  }\n\n  if (state.task === Tasks.NATURAL_LANGUAGE && state.nlp_models.length > 0) {\n    return nlpCode.slice();\n  }\n\n  switch (state.model) {\n    case Models.KNN:\n      return knnCode.slice();\n    case Models.ORDINAL_REGRESSION:\n    case Models.POISSON_REGRESSION:\n    case Models.LINEAR_REGRESSION:\n      return regressionCode.slice();\n  }\n};\n","export const defineLoadDataset = (dataset) => {\n    return `def loadData():\n    return datasets.load_${dataset}(return_X_y=True)`;\n}\n\nexport const defineLoadDatasetNLP = (dataset) => {\n    return `def loadData():\n    return pd.read_csv(\"${dataset}\", encoding=\"latin-1\")`\n}\n\nexport const defineLoadUnspecified = () => {\n    return `## Replace with your own dataset! Return X, y sets for supervised, or just your data for NLP\ndef loadData():\n    return None, None\n    `\n}\n\nexport const load = () => {\n    return  `X, y = loadData()`;\n}\n\nexport const loadNLP = () => {\n    return `data = loadData()`\n}\n\nexport const split = () => {\n    return `# Split the data into training/testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n    `;\n}","export const supervised = () => {\n\nreturn `import matplotlib.pyplot as plt \nimport numpy as np \nfrom sklearn.model_selection import train_test_split`;\n\n}\n\nexport const nlp = () => {\n    return `from wit import Wit\nimport pandas as pd`\n}\n\nexport const linear = () => {\n    return `from sklearn import linear_model\nfrom sklearn.metrics import mean_squared_error, r2_score`;\n}\n\nexport const poisson = () => {\n    return `from sklearn import linear_model\nfrom sklearn.metrics import mean_poisson_deviance`;\n}\n\nexport const ordinal = () => {\n    return `import mord\nfrom sklearn.metrics import accuracy_score`;\n}\n\nexport const knn = () => {\n    return `from sklearn import neighbors`;\n}\n\nexport const nn = () => {\n    return `from tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense, Input`;\n}\n\nexport const sklearnDatasets = () => {\n    return `from sklearn import datasets`\n}\n\nexport const normalization = () => {\n    return `from sklearn.preprocessing import scale`\n}\n\nexport const pca = () => {\n    return `from sklearn.decomposition import PCA`\n}\n\nexport const textCleaning = () => {\n    return `import re`\n}","export const normalization = () => {\n    return `X = scale(X)`\n}\n\nexport const pca = () => {\n    return `X = PCA(COMPONENTS).fit_transform(X)`\n}\n\nexport const textCleaning = () => {\n    return `data.str.strip()\ndata.replace('\\?|\\.|\\!|\\/|\\;|\\:|\\#', '', regex=True)`\n}\n\nexport const paramsPca = (components) => {\n    return `COMPONENTS = ${components}`\n}","export const params = (column) => {\n    return `FEATURE_COLUMN = ${column}\nDATA_COUNT = 100`\n}\n\nexport const slice = () => {\n    return `# Selects column to analyze\ndata = data.iloc[:, FEATURE_COLUMN]\n# Keeps specified number of rows\ndata = data.sample(n=DATA_COUNT, random_state=42)`\n}\n\n// export const modelEntity = () => {\n//     const entity = \n// `client = Wit(\"GUNUX2F3ZIXVVLK3DCRY6NXH2OLGOG6I\")\n\n// # Reformats trait/entity names\n// def rename(name):\n//     name = name[name.find(':')+1:]\n//     name = name[name.find('$')+1:]\n//     name = name.title()\n//     name = name.replace(\"Sentiment\", \"Polarity\")\n//     return name\n\n// # Converts wit's response into readable form\n// def entityLabelForSample(entities):\n//     entityArr = []\n//     for entityName in entities:\n//         matches = entities[entityName]\n//         firstMatch = matches[0]\n//         value = firstMatch['body']\n//         entityArr.append(rename(entityName) + \": \" + value)\n//     entityLabel = ', '.join(entityArr)\n//     return entityLabel\n\n// # Data\n// texts = []\n// entityLabels = []\n\n// # Queries Wit for NLP analysis, and processes/stores result\n// for i, row in data.iteritems():\n//     text = str(row)\n//     resp = client.message(text)\n\n//     entities = resp.get('entities')\n//     entityLabel = entityLabelForSample(entities)\n\n//     entityLabels.append(entityLabel)\n//     texts.append(text)\n\n// labeled = pd.DataFrame({'Text':texts,'Entities':entityLabels})\n\n// labeled.head(DATA_COUNT)\n// `\n// }\n\nconst converterEntity = \n`# Converts wit's response into readable form\ndef entityLabelForSample(entities):\n    entityArr = []\n    for entityName in entities:\n        matches = entities[entityName]\n        firstMatch = matches[0]\n        value = firstMatch['body']\n        entityArr.append(rename(entityName) + \": \" + value)\n    entityLabel = ', '.join(entityArr)\n    return entityLabel`;\n\nconst converterTrait =\n`# Converts wit's response into readable form\ndef traitLabelForSample(traits):\n    traitArr = []\n    for traitName in traits:\n        matches = traits[traitName]\n        firstMatch = matches[0]\n        value = firstMatch['value']\n        traitArr.append(rename(traitName) + \": \" + value)\n    traitLabel = ', '.join(traitArr)\n    return traitLabel`; \n\nconst dataframeTrait = `'Sentiments':traitLabels,`;\nconst dataframeEntity = `'Entities':entityLabels,`\n\nexport const modelNLP = (doEntity, doSentiment) => {\n\nlet converters = [];\nif (doEntity) converters.push(converterEntity);\nif (doSentiment) converters.push(converterTrait);\nconst converterString = converters.join('\\n');\n\nlet dataframeInputs = [];\nif (doEntity) dataframeInputs.push(dataframeEntity);\nif (doSentiment) dataframeInputs.push(dataframeTrait);\nconst dataframeString = dataframeInputs.join('\\n');\n\n    const nlp = \n`client = Wit(\"GUNUX2F3ZIXVVLK3DCRY6NXH2OLGOG6I\")\n\n# Reformats trait/entity names\ndef rename(name):\n    name = name[name.find(':')+1:]\n    name = name[name.find('$')+1:]\n    name = name.title()\n    name = name.replace(\"Sentiment\", \"Polarity\")\n    return name\n\n${converterString}\n\n# Data\ntexts = []\nentityLabels = []\ntraitLabels = []\n\n# Queries Wit for NLP analysis, and processes/stores result\nfor i, row in data.iteritems():\n    text = str(row)\n    resp = client.message(text)\n\n    entities = resp.get('entities')\n    traits = resp.get('traits')\n    entityLabel = entityLabelForSample(entities)\n    traitLabel = traitLabelForSample(traits)\n\n    entityLabels.append(entityLabel)\n    traitLabels.append(traitLabel)\n    texts.append(text)\n\nlabeled = pd.DataFrame(\n{'Text':texts,\n${dataframeString}\n})\n\nlabeled.head(DATA_COUNT)\n`\n    return nlp;\n}","export const params = (neighbors) => {\n    return `NEIGHBORS = ${neighbors}`;\n}\n\nexport const slice = () => {\n    return `X = X[:, :2]`;\n}\n\nexport const model = () => {\n\n    const knn = \n`# we create an instance of Neighbours Classifier and fit the data.\nclf = neighbors.KNeighborsClassifier(NEIGHBORS)\nclf.fit(X, y)\n\n# Plot the decision boundary. For that, we will assign a color to each\n# point in the mesh [x_min, x_max]x[y_min, y_max].\nx_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1\ny_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, .02),\n                        np.arange(y_min, y_max, .02))\nZ = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n\n# Put the result into a color plot\ncmap = 'coolwarm'\nZ = Z.reshape(xx.shape)\nplt.figure()\nplt.contourf(xx, yy, Z, cmap=cmap, alpha=0.7)\n\n# Plot the training points\nplt.scatter(X[:, 0], X[:, 1], c=y, cmap=cmap,\n            edgecolor='k', s=20)\nplt.xlim(xx.min(), xx.max())\nplt.ylim(yy.min(), yy.max())\nplt.title(\"Classification (k = %i)\"\n            % (NEIGHBORS))\n\nplt.show()\n`;\n    return knn;\n}","export const params = (column) => {\n    return `FEATURE_COLUMN = ${column}`;\n}\n\nexport const slice = () => {\n    return `X = X[:, np.newaxis, FEATURE_COLUMN]`;\n}\n\nexport const modelLinear = () => {\n\n    const linear = \n`# Create linear regression object\nregr = linear_model.LinearRegression()\n\n# Train the model using the training sets\nregr.fit(X_train, y_train)\n\n# Make predictions using the testing set\ny_pred = regr.predict(X_test)\n\n# The coefficients\nprint('Coefficients: \\n', regr.coef_)\n# The mean squared error\nprint('Mean squared error: %.2f'\n        % mean_squared_error(y_test, y_pred))\n# The coefficient of determination: 1 is perfect prediction\nprint('Coefficient of determination: %.2f'\n        % r2_score(y_test, y_pred))\n\n# Plot outputs\nplt.scatter(X_test, y_test,  color='black')\nplt.plot(X_test, y_pred, color='blue', linewidth=3)\nplt.title('Linear Regression Model')\n\nplt.show()\n`;\n    return linear;\n}\n\nexport const modelPoisson = () => {\n    const poisson = \n`# Create linear regression object\nregr = linear_model.PoissonRegressor()\n\n# Train the model using the training sets\nregr.fit(X_train, y_train)\n\n# Make predictions using the testing set\ny_pred = regr.predict(X_test)\n\n# The coefficients\nprint('Coefficients: \\n', regr.coef_)\n# The mean poisson deviance\nprint('Mean poisson deviance: %.2f'\n        % mean_poisson_deviance(y_test, y_pred))\n\n# Plot outputs\nplt.scatter(X_test, y_test,  color='black')\nplt.plot(X_test, y_pred, color='blue', linewidth=3)\nplt.title('Poisson Regression Model')\n\nplt.show()\n`;\n    return poisson;\n}\n\nexport const modelOrdinal = () => {\n    const ordinal = \n`# Create linear regression object\nregr = mord.OrdinalRidge()\n\n# Train the model using the training sets\nregr.fit(X_train, y_train)\n\n# Make predictions using the testing set\ny_pred = regr.predict(X_test)\n\n# The coefficients\nprint('Coefficients: \\n', regr.coef_)\n# The accuracy\nprint('Accuracy: %.2f'\n        % accuracy_score(y_test, y_pred))\n\n# Plot outputs\nplt.scatter(X_test, y_test,  color='black')\nplt.plot(X_test, y_pred, color='blue', linewidth=3)\nplt.title('Ordinal Regression Model')\n\nplt.show()\n`;\n    return ordinal;\n}","import React from \"react\";\n\nimport { useState } from \"state/State\";\nimport { CodeGen } from \"codegen/codeGen\";\nimport { useNNState } from \"state/NNState\";\n\nfunction CodeContainer() {\n  const { state } = useState();\n  const { nn_state } = useNNState();\n\n  return (\n    <textarea\n      value={CodeGen(state, nn_state)}\n      style={{ width: \"100%\", height: \"100%\", fontSize: \"11px\" }}\n    />\n  );\n}\n\nexport default CodeContainer;\n","import React from \"react\";\nimport \"App.css\";\nimport VisualizerContainer from \"containers/VisualizerContainer\";\nimport CodeContainer from \"containers/CodeContainer\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction MainColumnContainer() {\n  return (\n    <Grid container style={{ height: \"100%\" }}>\n      <Grid item className=\"visualizerContainer\">\n        <VisualizerContainer />\n      </Grid>\n      <Grid item className=\"outerContainer codeContainer\">\n        <CodeContainer />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default MainColumnContainer;\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport RightColumnContainer from \"containers/RightColumnContainer\";\nimport MainColumnContainer from \"containers/MainColumnContainer\";\nimport SummaryContainer from \"containers/SummaryContainer\";\n\nfunction ContentContainer() {\n  return (\n    <>\n      <Col className=\"summaryContainer\" lg={2}>\n        <SummaryContainer />\n      </Col>\n      <Col className=\"mainColumnContainer\">\n        <MainColumnContainer />\n      </Col>\n      <Col className=\"rightColumnContainer\" lg={3}>\n        <RightColumnContainer />\n      </Col>\n    </>\n  );\n}\n\nexport default ContentContainer;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"react-chat-widget/lib/styles.css\";\nimport \"chat.css\";\nimport \"App.css\";\n\nimport { StateProvider } from \"state/State\";\nimport ContentContainer from \"containers/ContentContainer\";\nimport HeaderContainer from \"containers/HeaderContainer\";\nimport WidgetContainer from \"containers/WidgetContainer\";\nimport { NNStateProvider } from \"state/NNState\";\nimport { ModelStateProvider } from \"state/ModelState\";\n\nfunction App() {\n  return (\n    <Container className={\"vh-100\"} fluid>\n      <StateProvider>\n        <NNStateProvider>\n          <ModelStateProvider>\n            {/* <Row className={\"headerContainer\"}>\n          <HeaderContainer />\n        </Row> */}\n            <Row className={\"contentContainer\"}>\n              <ContentContainer />\n            </Row>\n            <WidgetContainer />\n          </ModelStateProvider>\n        </NNStateProvider>\n      </StateProvider>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppContainer from \"containers/AppContainer\";\nimport * as serviceWorker from \"serviceWorker\";\nimport \"fontsource-roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}